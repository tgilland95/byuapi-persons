{
  "swagger": "2.0",
  "info": {
    "title": "Persons",
    "description": "Persons Resource of the University API",
    "version": "v1",
    "contact": {
      "email": "it@byu.edu",
      "name": "OIT Service Desk Support",
      "url": "https://it.byu.edu"
    }
  },
  "host": "api.byu.edu",
  "schemes": [
    "https"
  ],
  "basePath": "/byuapi/persons",
  "produces": [
    "application/json"
  ],
  "x-controller": "persons",
  "paths": {
    "/": {
      "get": {
        "summary": "Persons",
        "description": "Returns a collection of Persons",
        "operationId": "getPersons",
        "parameters": [
          {
            "name": "net_id",
            "in": "query",
            "description": "The person's Net ID",
            "required": false,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]{0,8}$"
          },
          {
            "name": "credential_type",
            "in": "query",
            "description": "The type of credential being looked up",
            "required": false,
            "type": "string",
            "enum": [
              "BYU_HAWAII_ID",
              "BYU_IDAHO_ID",
              "FACEBOOK_ID",
              "GOOGLE_ID",
              "ID_CARD",
              "LDS_ACCOUNT_ID",
              "LDS_CMIS_ID",
              "NET_ID",
              "PROX_CARD",
              "SEMINARY_STUDENT_ID",
              "WSO2_CLIENT_ID"
            ]
          },
          {
            "name": "credential_id",
            "in": "query",
            "description": "The credential id",
            "required": false,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "The user name belonging to the credential type",
            "required": false,
            "type": "string"
          },
          {
            "name": "ssn",
            "in": "query",
            "description": "The person's Social Security Number",
            "required": false,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "The person's PERSONAL email address. A case-insensitive search is performed.  A wildcard character is automatically appended.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "The person's phone number.  A numerics-only search is performed.",
            "required": false,
            "type": "string",
            "pattern": "^[0-9]{5,30}$",
            "minLength": 5,
            "maxLength": 30
          },
          {
            "name": "surname",
            "in": "query",
            "description": "The person's surname.  A case-insensitive search is performed.  You may insert '*' wildcards anywhere in the string, and a wildcard character is automatically appended.",
            "required": false,
            "type": "string",
            "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
            "maxLength": 40
          },
          {
            "name": "rest_of_name",
            "in": "query",
            "description": "The person's given names.  A case-insensitive search is performed.",
            "required": false,
            "type": "string",
            "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
            "maxLength": 80
          },
          {
            "name": "preferred_surname",
            "in": "query",
            "description": "The person's preferred surname.  A case-insensitive search is performed.",
            "required": false,
            "type": "string",
            "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
            "maxLength": 40
          },
          {
            "name": "preferred_first_name",
            "in": "query",
            "description": "The person's preferred first name.  A case-insensitive search is performed.",
            "required": false,
            "type": "string",
            "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
            "maxLength": 25
          },
          {
            "name": "sex",
            "in": "query",
            "description": "The person's sex",
            "required": false,
            "type": "string",
            "enum": [
              "M",
              "F",
              "?"
            ]
          },
          {
            "name": "deceased",
            "in": "query",
            "description": "The person's deceased status",
            "required": false,
            "type": "string",
            "enum": [
              "Y",
              "N"
            ]
          },
          {
            "name": "marital_status",
            "in": "query",
            "description": "The person's marital status",
            "required": false,
            "type": "string",
            "enum": [
              "D",
              "M",
              "S",
              "W",
              "?"
            ]
          },
          {
            "name": "religion_code",
            "in": "query",
            "description": "The person's religion, validated through the meta/religion service",
            "required": false,
            "type": "string",
            "pattern": "^[A-Z?]{3}$",
            "maxLength": 3
          },
          {
            "name": "citizenship_country_code",
            "in": "query",
            "description": "The person's citizenship, validated through the meta/country service",
            "required": false,
            "type": "string",
            "pattern": "^[A-Z?]{3}$",
            "maxLength": 3
          },
          {
            "name": "home_town",
            "in": "query",
            "description": "The person's home town",
            "required": false,
            "type": "string",
            "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
            "maxLength": 30
          },
          {
            "name": "home_state_code",
            "in": "query",
            "description": "The person's home state, validated through the meta/state service",
            "required": false,
            "type": "string",
            "pattern": "^([?]{2}|[A-Z]{2,5})$",
            "maxLength": 4
          },
          {
            "name": "home_country_code",
            "in": "query",
            "description": "The person's home country code, validated through the meta/country service",
            "required": false,
            "type": "string",
            "pattern": "^[A-Z?]{3}$",
            "maxLength": 3
          },
          {
            "name": "restricted",
            "in": "query",
            "description": "The FERPA restricted status",
            "required": false,
            "type": "string",
            "enum": [
              "Y",
              "N"
            ]
          },
          {
            "name": "visa_type",
            "in": "query",
            "description": "The person's visa type, validated through the meta/visa_type service",
            "required": false,
            "type": "string",
            "pattern": "^( |[A-Z0-9?]{1,3})$",
            "maxLength": 3
          },
          {
            "name": "employee_type",
            "in": "query",
            "description": "The person's employee type in XXX-XX-XXX format. (See the meta/employee_type service)",
            "required": false,
            "type": "string"
          },
          {
            "name": "student_status",
            "in": "query",
            "description": "The person's student status.  Provided by Student Status Info service",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_sets",
            "in": "query",
            "description": "indicates which field sets are to be returned",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "addresses",
              "credentials",
              "email_addresses",
              "employee_summaries",
              "ethnicities",
              "family_phones",
              "government_records",
              "group_membership_events",
              "group_memberships",
              "groups_administered",
              "id_cards",
              "languages",
              "my_delegators",
              "my_guests",
              "personal_records",
              "phones",
              "relationships",
              "student_summaries"
            ]
          },
          {
            "name": "contexts",
            "in": "query",
            "description": "indicates which contexts are to be returned",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "contact",
              "emergency",
              "official",
              "marriott_school"
            ]
          }
        ],
        "tags": [
          "persons"
        ],
        "responses": {
          "200": {
            "description": "A collection of Persons successfully returned",
            "schema": {
              "$ref": "#/definitions/persons"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "summary": "Persons",
        "description": "Creates a Person",
        "operationId": "createPerson",
        "parameters": [
          {
            "name": "person_post",
            "in": "body",
            "description": "The address values to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/person_post"
            }
          }
        ],
        "tags": [
          "persons"
        ],
        "responses": {
          "201": {
            "description": "Person successfully created",
            "schema": {
              "$ref": "#/definitions/basic"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}": {
      "get": {
        "summary": "Persons",
        "description": "Returns the person with the specified BYU ID",
        "operationId": "getPerson",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "field_sets",
            "in": "query",
            "description": "indicates which field sets are to be returned",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "addresses",
              "credentials",
              "email_addresses",
              "employee_summaries",
              "ethnicities",
              "family_phones",
              "government_records",
              "group_membership_events",
              "group_memberships",
              "groups_administered",
              "id_cards",
              "languages",
              "my_delegators",
              "my_guests",
              "personal_records",
              "phones",
              "relationships",
              "student_summaries"
            ]
          },
          {
            "name": "contexts",
            "in": "query",
            "description": "indicates which contexts are to be returned",
            "required": false,
            "type": "string",
            "enum": [
              "all",
              "contact",
              "emergency",
              "official",
              "marriott_school"
            ]
          }
        ],
        "tags": [
          "persons"
        ],
        "responses": {
          "200": {
            "description": "Person successfully returned",
            "schema": {
              "$ref": "#/definitions/basic"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Persons",
        "description": "Modifies the Person with specified BYU ID",
        "operationId": "modifyPerson",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "basic_put",
            "in": "body",
            "description": "The person data to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/basic_put"
            }
          }
        ],
        "tags": [
          "persons"
        ],
        "responses": {
          "200": {
            "description": "Person successfully updated",
            "schema": {
              "$ref": "#/definitions/basic"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Persons",
        "description": "Deletes the person with the specified BYU ID",
        "operationId": "deletePerson",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "persons"
        ],
        "responses": {
          "204": {
            "description": "Person successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/addresses": {
      "x-controller": "addresses",
      "get": {
        "summary": "Addresses",
        "description": "Returns all addresses for the BYU ID",
        "operationId": "getAddresses",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "addresses"
        ],
        "responses": {
          "200": {
            "description": "Addresses successfully returned",
            "schema": {
              "$ref": "#/definitions/addresses"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/addresses/{address_type}": {
      "x-controller": "addresses",
      "get": {
        "summary": "Addresses",
        "description": "Returns the address for the specified BYU ID and address type",
        "operationId": "getAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "address_type",
            "in": "path",
            "description": "The type of address",
            "required": true,
            "type": "string",
            "enum": [
              "MAL",
              "PRM",
              "RES",
              "WRK"
            ]
          }
        ],
        "tags": [
          "addresses"
        ],
        "responses": {
          "200": {
            "description": "Address successfully returned",
            "schema": {
              "$ref": "#/definitions/address"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Addresses",
        "description": "Modifies or creates an address for the specified BYU ID and address_type",
        "operationId": "modifyAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "address_type",
            "in": "path",
            "description": "The type of address",
            "required": true,
            "type": "string",
            "enum": [
              "MAL",
              "PRM",
              "RES",
              "WRK"
            ]
          },
          {
            "name": "address_put",
            "in": "body",
            "description": "The address values to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/address_put"
            }
          }
        ],
        "tags": [
          "addresses"
        ],
        "responses": {
          "200": {
            "description": "Address successfully updated",
            "schema": {
              "$ref": "#/definitions/address"
            }
          },
          "201": {
            "description": "Address successfully created",
            "schema": {
              "$ref": "#/definitions/address"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Addresses",
        "description": "Deletes the address for the BYU ID/address_type",
        "operationId": "deleteAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "address_type",
            "in": "path",
            "description": "The type of address",
            "required": true,
            "type": "string",
            "enum": [
              "MAL",
              "PRM",
              "RES",
              "WRK"
            ]
          }
        ],
        "tags": [
          "addresses"
        ],
        "responses": {
          "204": {
            "description": "Address successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/credentials": {
      "get": {
        "summary": "Credentials",
        "description": "Returns all credentials for the BYU ID",
        "operationId": "getCredentials",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "credential_type",
            "in": "query",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": false,
            "type": "string",
            "enum": [
              "BYU_HAWAII_ID",
              "BYU_IDAHO_ID",
              "FACEBOOK_ID",
              "GOOGLE_ID",
              "ID_CARD",
              "LDS_ACCOUNT_ID",
              "LDS_CMIS_ID",
              "NET_ID",
              "PROX_CARD",
              "SEMINARY_STUDENT_ID",
              "WSO2_CLIENT_ID"
            ]
          }
        ],
        "tags": [
          "credentials"
        ],
        "responses": {
          "200": {
            "description": "Credentials successfully returned",
            "schema": {
              "$ref": "#/definitions/credentials"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/credentials/{credential_type},{credential_id}": {
      "get": {
        "summary": "Credentials",
        "description": "Returns the credential for the BYU ID/credential_type",
        "operationId": "getCredential",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "credential_type",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string",
            "enum": [
              "BYU_HAWAII_ID",
              "BYU_IDAHO_ID",
              "FACEBOOK_ID",
              "GOOGLE_ID",
              "ID_CARD",
              "LDS_ACCOUNT_ID",
              "LDS_CMIS_ID",
              "NET_ID",
              "PROX_CARD",
              "SEMINARY_STUDENT_ID",
              "WSO2_CLIENT_ID"
            ]
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "credentials"
        ],
        "responses": {
          "200": {
            "description": "Credential successfully returned",
            "schema": {
              "$ref": "#/definitions/credential"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Credentials",
        "description": "Modifies or creates a credential",
        "operationId": "modifyCredential",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "credential_type",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string",
            "enum": [
              "BYU_HAWAII_ID",
              "BYU_IDAHO_ID",
              "FACEBOOK_ID",
              "GOOGLE_ID",
              "ID_CARD",
              "LDS_ACCOUNT_ID",
              "LDS_CMIS_ID",
              "NET_ID",
              "PROX_CARD",
              "SEMINARY_STUDENT_ID",
              "WSO2_CLIENT_ID"
            ]
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "credential_put",
            "in": "body",
            "description": "The attributes of the credential to be created or updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/credential_put"
            }
          }
        ],
        "tags": [
          "credentials"
        ],
        "responses": {
          "200": {
            "description": "Credential successfully updated",
            "schema": {
              "$ref": "#/definitions/credential"
            }
          },
          "201": {
            "description": "Credential successfully created",
            "schema": {
              "$ref": "#/definitions/credential"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Credentials",
        "description": "Deletes a credential",
        "operationId": "deleteCredential",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "credential_type",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string",
            "enum": [
              "FACEBOOK_ID",
              "GOOGLE_ID",
              "ID_CARD",
              "NET_ID",
              "PROX_CARD",
              "WSO2_CLIENT_ID",
              "LDS_ACCOUNT_ID",
              "LDS_CMIS_ID",
              "BYU_IDAHO_ID",
              "BYU_HAWAII_ID"
            ]
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "One of the credential types available through the meta/credential_type service.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "credentials"
        ],
        "responses": {
          "204": {
            "description": "Credential successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/email_addresses": {
      "get": {
        "summary": "Email addresses",
        "description": "Returns all email addresses for the BYU ID",
        "operationId": "getEmailAddresses",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "email_addresses"
        ],
        "responses": {
          "200": {
            "description": "Email addresses successfully returned",
            "schema": {
              "$ref": "#/definitions/email_addresses"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/email_addresses/{email_address_type}": {
      "get": {
        "summary": "Email addresses",
        "description": "Returns the email address for the BYU ID/email_address_type",
        "operationId": "getEmailAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "email_address_type",
            "in": "path",
            "description": "The type of email address",
            "required": true,
            "type": "string",
            "enum": [
              "PERSONAL",
              "WORK",
              "SECURITY"
            ]
          }
        ],
        "tags": [
          "email_addresses"
        ],
        "responses": {
          "200": {
            "description": "The email address was successfully returned",
            "schema": {
              "$ref": "#/definitions/email_address"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Email addresses",
        "description": "Modifies or creates an email address for the BYU ID/email_address_type",
        "operationId": "modifyEmailAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "email_address_type",
            "in": "path",
            "description": "The type of email address",
            "required": true,
            "type": "string",
            "enum": [
              "PERSONAL",
              "WORK",
              "SECURITY"
            ]
          },
          {
            "name": "email_put",
            "in": "body",
            "description": "The email address values to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/email_put"
            }
          }
        ],
        "tags": [
          "email_addresses"
        ],
        "responses": {
          "200": {
            "description": "Email address successfully updated",
            "schema": {
              "$ref": "#/definitions/email_address"
            }
          },
          "201": {
            "description": "Email address successfully created",
            "schema": {
              "$ref": "#/definitions/email_address"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Email addresses",
        "description": "Deletes the email address for the BYU ID/email_address_type",
        "operationId": "deleteEmailAddress",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "email_address_type",
            "in": "path",
            "description": "The type of email address",
            "required": true,
            "type": "string",
            "enum": [
              "PERSONAL",
              "WORK",
              "SECURITY"
            ]
          }
        ],
        "tags": [
          "email_addresses"
        ],
        "responses": {
          "204": {
            "description": "Email address successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/employee_summaries": {
      "get": {
        "summary": "Employee summaries",
        "description": "Returns employee summary data for a person",
        "operationId": "getEmployeeSummaries",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "employee_summaries"
        ],
        "responses": {
          "200": {
            "description": "Employee information for the person successfully returned",
            "schema": {
              "$ref": "#/definitions/employee_summaries"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/ethnicities": {
      "get": {
        "summary": "Ethnicities",
        "description": "Returns all addresses for the BYU ID",
        "operationId": "getEthnicities",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "ethnicities"
        ],
        "responses": {
          "200": {
            "description": "Addresses successfully returned",
            "schema": {
              "$ref": "#/definitions/ethnicities"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/ethnicities/{ethnicity_code}": {
      "get": {
        "summary": "Ethnicities",
        "description": "Returns the address for the specified BYU ID and address type",
        "operationId": "getEthnicity",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "ethnicity_code",
            "in": "path",
            "description": "The type of ethnicity",
            "required": true,
            "type": "string",
            "enum": [
              "CAU",
              "AMI",
              "BLK",
              "PAC",
              "???",
              "HIS",
              "WHI",
              "OTH",
              "ASN",
              "HAW"
            ]
          }
        ],
        "tags": [
          "ethnicities"
        ],
        "responses": {
          "200": {
            "description": "Ethnicity successfully returned",
            "schema": {
              "$ref": "#/definitions/ethnicity"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Ethnicities",
        "description": "Modifies or creates an address for the specified BYU ID and address_type",
        "operationId": "modifyEthnicity",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "ethnicity_code",
            "in": "path",
            "description": "The type of ethnicity",
            "required": true,
            "type": "string",
            "enum": [
              "CAU",
              "AMI",
              "BLK",
              "PAC",
              "???",
              "HIS",
              "WHI",
              "OTH",
              "ASN",
              "HAW"
            ]
          },
          {
            "name": "ethnicity_put",
            "in": "body",
            "description": "The address values to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethnicity_put"
            }
          }
        ],
        "tags": [
          "ethnicities"
        ],
        "responses": {
          "200": {
            "description": "Ethnicity successfully updated",
            "schema": {
              "$ref": "#/definitions/ethnicity"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Ethnicities",
        "description": "Deletes the address for the BYU ID/address_type",
        "operationId": "deleteEthnicity",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "ethnicity_code",
            "in": "path",
            "description": "The type of ethnicity",
            "required": true,
            "type": "string",
            "enum": [
              "CAU",
              "AMI",
              "BLK",
              "PAC",
              "???",
              "HIS",
              "WHI",
              "OTH",
              "ASN",
              "HAW"
            ]
          }
        ],
        "tags": [
          "ethnicities"
        ],
        "responses": {
          "204": {
            "description": "Address successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/family_phones": {
      "get": {
        "summary": "Family phones",
        "description": "Returns the person's family phones",
        "operationId": "getFamilyPhones",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "family_phones"
        ],
        "responses": {
          "200": {
            "description": "Family phones successfully returned",
            "schema": {
              "$ref": "#/definitions/family_phones"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/family_phones/{phone_type},{phone_number}": {
      "get": {
        "summary": "Family phones",
        "description": "Returns information on a specified family phone",
        "operationId": "getFamilyPhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_type",
            "in": "path",
            "description": "The phone type",
            "required": true,
            "type": "string",
            "enum": [
              "EMR",
              "PRM"
            ]
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The family member's phone number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "family_phones"
        ],
        "responses": {
          "200": {
            "description": "Family phone successfully returned",
            "schema": {
              "$ref": "#/definitions/family_phone"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Family phones",
        "description": "Modifies or creates a family phone",
        "operationId": "modifyFamilyPhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_type",
            "in": "path",
            "description": "The phone type",
            "required": true,
            "type": "string",
            "enum": [
              "EMR",
              "PRM"
            ]
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The family member's phone number",
            "required": true,
            "type": "string"
          },
          {
            "name": "family_phone_put",
            "in": "body",
            "description": "The attributes associated with the family phone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/family_phone_put"
            }
          }
        ],
        "tags": [
          "family_phones"
        ],
        "responses": {
          "200": {
            "description": "Family phone successfully updated",
            "schema": {
              "$ref": "#/definitions/family_phone"
            }
          },
          "201": {
            "description": "Family phone successfully created",
            "schema": {
              "$ref": "#/definitions/family_phone"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Family phones",
        "description": "Deletes a specified family phone",
        "operationId": "deleteFamilyPhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_type",
            "in": "path",
            "description": "The phone type",
            "required": true,
            "type": "string",
            "enum": [
              "EMR",
              "PRM"
            ]
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The family member's phone number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "family_phones"
        ],
        "responses": {
          "204": {
            "description": "Family phone successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/government_records": {
      "get": {
        "summary": "Persons",
        "description": "Returns the person with the specified BYU ID",
        "operationId": "getGovernmentRecords",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "government_records"
        ],
        "responses": {
          "200": {
            "description": "Person successfully returned",
            "schema": {
              "$ref": "#/definitions/government_records"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Persons",
        "description": "Modifies the Person with specified BYU ID",
        "operationId": "modifyGovernmentRecords",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "government_record_put",
            "in": "body",
            "description": "The person data to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/government_record_put"
            }
          }
        ],
        "tags": [
          "government_records"
        ],
        "responses": {
          "200": {
            "description": "Person successfully updated",
            "schema": {
              "$ref": "#/definitions/government_records"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/group_membership_events": {
      "get": {
        "summary": "Group memberships",
        "description": "Returns the group membership events for the BYU ID",
        "operationId": "getGroupMembershipEvents",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "group_membership_events"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the group events for the BYU ID",
            "schema": {
              "$ref": "#/definitions/group_membership_events"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/group_membership_events/{group_id}": {
      "get": {
        "summary": "Group memberships",
        "description": "Returns the group event history for the specified BYU ID/group",
        "operationId": "getGroupMembershipEvent",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "group_membership_events"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the person's group events for the specified group",
            "schema": {
              "$ref": "#/definitions/group_membership_event"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/group_memberships": {
      "get": {
        "summary": "Group memberships",
        "description": "Returns the group memberships for the BYU ID",
        "operationId": "getGroupMemberships",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The ID of the person's group",
            "required": false,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9'_-]{0,28}(|[a-zA-Z0-9])$"
          }
        ],
        "tags": [
          "group_memberships"
        ],
        "responses": {
          "200": {
            "description": "Group memberships successfully returned",
            "schema": {
              "$ref": "#/definitions/group_memberships"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/group_memberships/{group_id}": {
      "get": {
        "summary": "Group memberships",
        "description": "Returns group membership information for the BYU ID/group",
        "operationId": "getGroupMembership",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "group_memberships"
        ],
        "responses": {
          "200": {
            "description": "Group memberships successfully returned",
            "schema": {
              "$ref": "#/definitions/group_membership"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Group memberships",
        "description": "Creates or modifies a group member",
        "operationId": "modifyGroupMembership",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "group_membership_put",
            "in": "body",
            "description": "The group membership values to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_membership_put"
            }
          }
        ],
        "tags": [
          "group_memberships"
        ],
        "responses": {
          "200": {
            "description": "Group membership successfully updated",
            "schema": {
              "$ref": "#/definitions/group_membership"
            }
          },
          "201": {
            "description": "Group membership successfully added",
            "schema": {
              "$ref": "#/definitions/group_membership"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Group memberships",
        "description": "Group membership successfully deleted",
        "operationId": "deleteGroupMembership",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "group_memberships"
        ],
        "responses": {
          "204": {
            "description": "Group membership successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/groups_administered": {
      "get": {
        "summary": "Groups administered",
        "description": "Returns groups administered by a person",
        "operationId": "getGroupsAdministered",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "groups_administered"
        ],
        "responses": {
          "200": {
            "description": "The groups administered by the person successfully returned",
            "schema": {
              "$ref": "#/definitions/groups_administered"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/groups_administered/{group_id}": {
      "get": {
        "summary": "Groups administered",
        "description": "Returns group administration information for the BYU ID/group",
        "operationId": "getGroupAdministered",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "groups_administered"
        ],
        "responses": {
          "200": {
            "description": "The group administration information for the BYU ID/group successfully returned",
            "schema": {
              "$ref": "#/definitions/group_administered"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Groups administered",
        "description": "Modifies or creates group administration rights for the person/group",
        "operationId": "modifyGroupAdministered",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "group_administered_put",
            "in": "body",
            "description": "The group-administered information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_administered_put"
            }
          }
        ],
        "tags": [
          "groups_administered"
        ],
        "responses": {
          "200": {
            "description": "The person's group-administered information successfully changed",
            "schema": {
              "$ref": "#/definitions/group_administered"
            }
          },
          "201": {
            "description": "A group-administered has successfully been created for the person ",
            "schema": {
              "$ref": "#/definitions/group_membership_event"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Groups administered",
        "description": "Deletes administration rights to a group for a BYU ID",
        "operationId": "deleteGroupAdministered",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The Group ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "groups_administered"
        ],
        "responses": {
          "204": {
            "description": "Administrator rights for the person/group successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/my_delegators": {
      "get": {
        "summary": "Delegations",
        "description": "Returns a collection of guest rights delegator to the BYU ID",
        "operationId": "getMyDelegators",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "delegator_id",
            "in": "query",
            "description": "The delegator's BYU ID",
            "required": false,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "delegator_net_id",
            "in": "query",
            "description": "The delegator's Net ID",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "my_delegators"
        ],
        "responses": {
          "200": {
            "description": "Guest rights successfully returned",
            "schema": {
              "$ref": "#/definitions/my_delegators"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/my_delegators/{access_delegation_id}": {
      "get": {
        "summary": "Delegations",
        "description": "Returns the guest rights delegator to the BYU ID by the delegator BYU ID",
        "operationId": "getMyDelegator",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The BYU ID of the person (guest)",
            "required": true,
            "type": "string"
          },
          {
            "name": "access_delegation_id",
            "in": "path",
            "description": "The access delegation sequence number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "my_delegators"
        ],
        "responses": {
          "200": {
            "description": "Guest rights successfully returned",
            "schema": {
              "$ref": "#/definitions/my_delegator"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Delegations",
        "description": "Accepts or rejects the access delegation invitation",
        "operationId": "acceptDelegation",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's (guest's) BYU ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "access_delegation_id",
            "in": "path",
            "description": "The access delegation sequence number",
            "required": true,
            "type": "string"
          },
          {
            "name": "my_delegator_put",
            "in": "body",
            "description": "The details of the rights being granted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/my_delegator_put"
            }
          }
        ],
        "tags": [
          "my_delegators"
        ],
        "responses": {
          "200": {
            "description": "Guest invitation successfully set",
            "schema": {
              "$ref": "#/definitions/my_delegator"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/my_guests": {
      "get": {
        "summary": "Guests",
        "description": "Returns a collection of guests who have or had access rights to this BYU_ID",
        "operationId": "getMyGuests",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "guest_id",
            "in": "query",
            "description": "The guest's BYU ID",
            "required": false,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "guest_net_id",
            "in": "query",
            "description": "The guest's Net ID",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "guests"
        ],
        "responses": {
          "200": {
            "description": "Guest Access rights granted by a BYU ID successfully returned",
            "schema": {
              "$ref": "#/definitions/my_guests"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "summary": "Guests",
        "description": "Creates guest access information for the person/guest",
        "operationId": "createMyGuest",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "my_guest_post",
            "in": "body",
            "description": "The guest access information to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/my_guest_post"
            }
          }
        ],
        "tags": [
          "guests"
        ],
        "responses": {
          "200": {
            "description": "Guest access information already exists. Update with a PUT",
            "schema": {
              "$ref": "#/definitions/my_guest"
            }
          },
          "201": {
            "description": "Guest access information for successfully created",
            "schema": {
              "$ref": "#/definitions/my_guest"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/my_guests/{access_delegation_id}": {
      "get": {
        "summary": "Guests",
        "description": "Returns a specific access delegation and information about to whom it was granted. NOTE: Guest ID is not used because the same person could have been granted access then had access revoked and then granted access again",
        "operationId": "getMyGuest",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "access_delegation_id",
            "in": "path",
            "description": "The access delegation sequence number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "guests"
        ],
        "responses": {
          "200": {
            "description": "The guest access information for the person/guest successfully returned",
            "schema": {
              "$ref": "#/definitions/my_guest"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Guests",
        "description": "Modifies guest access information for the person/guest",
        "operationId": "modifyMyGuest",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "access_delegation_id",
            "in": "path",
            "description": "The access delegation sequence number",
            "required": true,
            "type": "string"
          },
          {
            "name": "my_guest_put",
            "in": "body",
            "description": "The guest access information to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/my_guest_put"
            }
          }
        ],
        "tags": [
          "guests"
        ],
        "responses": {
          "200": {
            "description": "Guest access information for successfully updated",
            "schema": {
              "$ref": "#/definitions/my_guest"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/id_cards": {
      "get": {
        "summary": "ID cards",
        "description": "Returns a person's ID card information",
        "operationId": "getIDcards",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "id_cards"
        ],
        "responses": {
          "200": {
            "description": "Person's ID card information successfully returned",
            "schema": {
              "$ref": "#/definitions/id_cards"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "ID cards",
        "description": "Modifies a person's ID card information",
        "operationId": "modifyIDcards",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "id_cards_put",
            "in": "body",
            "description": "The ID card info being changed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/id_cards_put"
            }
          }
        ],
        "tags": [
          "id_cards"
        ],
        "responses": {
          "200": {
            "description": "Person's ID card information successfully updated",
            "schema": {
              "$ref": "#/definitions/id_cards"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "ID cards",
        "description": "Deletes a person's ID card",
        "operationId": "deleteIDcards",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "id_cards"
        ],
        "responses": {
          "204": {
            "description": "Person's ID card information successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/languages": {
      "get": {
        "summary": "Languages",
        "description": "Returns the languages for a person",
        "operationId": "getLanguages",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "languages"
        ],
        "responses": {
          "200": {
            "description": "Person's language information successfully returned",
            "schema": {
              "$ref": "#/definitions/languages"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/languages/{language_code}": {
      "get": {
        "summary": "Languages",
        "description": "Returns a person's abilities for a specific language",
        "operationId": "getLanguage",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "One of the language codes available through the meta/language service",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "languages"
        ],
        "responses": {
          "200": {
            "description": "The persons language ability successfully returned",
            "schema": {
              "$ref": "#/definitions/language"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Languages",
        "description": "Modifies a person's abilities for a specific language",
        "operationId": "modifyLanguage",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "One of the language codes available through the meta/language service",
            "required": true,
            "type": "string"
          },
          {
            "name": "language_put",
            "in": "body",
            "description": "The language parameters to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/language_put"
            }
          }
        ],
        "tags": [
          "languages"
        ],
        "responses": {
          "200": {
            "description": "Language information successfully updated for the person/language",
            "schema": {
              "$ref": "#/definitions/language"
            }
          },
          "201": {
            "description": "Language information successfully created for the person/language",
            "schema": {
              "$ref": "#/definitions/language"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Languages",
        "description": "Deletes a person's language abilities for a specific language",
        "operationId": "deleteLanguage",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "One of the language codes available through the meta/language service",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "languages"
        ],
        "responses": {
          "204": {
            "description": "Address successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/personal_records": {
      "get": {
        "summary": "Persons",
        "description": "Returns the person with the specified BYU ID",
        "operationId": "getPersonal",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "personal_records"
        ],
        "responses": {
          "200": {
            "description": "Person successfully returned",
            "schema": {
              "$ref": "#/definitions/personal_records"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Persons",
        "description": "Modifies the Person with specified BYU ID",
        "operationId": "modifyPersonal",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "personal_record_put",
            "in": "body",
            "description": "The person data to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/personal_record_put"
            }
          }
        ],
        "tags": [
          "personal_records"
        ],
        "responses": {
          "200": {
            "description": "Person successfully updated",
            "schema": {
              "$ref": "#/definitions/personal_records"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/phones": {
      "get": {
        "summary": "Phones",
        "description": "Returns a person's phones",
        "operationId": "getPhones",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "One of the person's phone_numbers",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "phones"
        ],
        "responses": {
          "200": {
            "description": "The person's phone information successfully returned",
            "schema": {
              "$ref": "#/definitions/phones"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/phones/{phone_number}": {
      "get": {
        "summary": "Phones",
        "description": "Returns phone information for a specific person/phone number",
        "operationId": "getPhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The person's phone number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "phones"
        ],
        "responses": {
          "200": {
            "description": "Phone information successfully returned",
            "schema": {
              "$ref": "#/definitions/phone"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Phones",
        "description": "Sets phone information for a specific person/phone number",
        "operationId": "modifyPhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The person's phone Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone_put",
            "in": "body",
            "description": "The phone information to be updated or created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/phone_put"
            }
          }
        ],
        "tags": [
          "phones"
        ],
        "responses": {
          "200": {
            "description": "Phone successfully updated",
            "schema": {
              "$ref": "#/definitions/phone"
            }
          },
          "201": {
            "description": "Phone successfully created",
            "schema": {
              "$ref": "#/definitions/phones"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Phones",
        "description": "Deletes one of a person's phones",
        "operationId": "deletePhone",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "phone_number",
            "in": "path",
            "description": "The phone number",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "phones"
        ],
        "responses": {
          "204": {
            "description": "Address successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/relationships": {
      "get": {
        "summary": "Relationships",
        "description": "Returns a person's relationships",
        "operationId": "getRelationships",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "relationships"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the person's relationships",
            "schema": {
              "$ref": "#/definitions/relationships"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/relationships/{related_id}": {
      "get": {
        "summary": "Relationships",
        "description": "Returns information on a specific relationship between two identities",
        "operationId": "getRelationship",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "related_id",
            "in": "path",
            "description": "The related person's BYU ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "relationships"
        ],
        "responses": {
          "200": {
            "description": "Relationship information successfully returned",
            "schema": {
              "$ref": "#/definitions/relationship"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "summary": "Relationships",
        "description": "Modifies or creates a relationship between two persons",
        "operationId": "modifyRelationship",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "related_id",
            "in": "path",
            "description": "The related person's BYU ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationship_put",
            "in": "body",
            "description": "The relationship information to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/relationship_put"
            }
          }
        ],
        "tags": [
          "relationships"
        ],
        "responses": {
          "200": {
            "description": "Relationship information successfully updated",
            "schema": {
              "$ref": "#/definitions/relationship"
            }
          },
          "201": {
            "description": "Relationship successfully created",
            "schema": {
              "$ref": "#/definitions/relationship"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "summary": "Relationships",
        "description": "Deletes a relationship",
        "operationId": "deleteRelationship",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          },
          {
            "name": "related_id",
            "in": "path",
            "description": "The related person's BYU ID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "relationships"
        ],
        "responses": {
          "204": {
            "description": "Relationship successfully deleted"
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/{byu_id}/student_summaries": {
      "get": {
        "summary": "Student summaries",
        "description": "Returns a summary of a person's academic information",
        "operationId": "getStudentSummaries",
        "parameters": [
          {
            "name": "byu_id",
            "in": "path",
            "description": "The person's BYU ID",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]{9}$"
          }
        ],
        "tags": [
          "student_summaries"
        ],
        "responses": {
          "200": {
            "description": "Person's academic summary information successfully returned",
            "schema": {
              "$ref": "#/definitions/student_summaries"
            }
          },
          "400": {
            "description": "Invalid Request - unable to interpret request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Authentication required to access data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "Access denied to protected data",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Query parameters conflict or are malformed",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "access_delegation_id": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": 3672,
        "api_type": "read-only",
        "key": true
      }
    },
    "access_type": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "L",
            "W",
            "B"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      }
    },
    "active": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": " ",
          "enum": [
            " ",
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "I",
        "api_type": "read-only"
      }
    },
    "address": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for an address",
          "type": "object",
          "properties": {
            "addresses.info": {
              "description": "Hypermedia links format",
              "type": "object",
              "required": [
                "rel",
                "href",
                "method"
              ],
              "properties": {
                "rel": {
                  "type": "string",
                  "default": "self"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "default": "https://api.byu.edu/byuapi/persons/v1/:byu_id/addresses/:address_type"
                },
                "method": {
                  "type": "string",
                  "default": "GET",
                  "enum": [
                    "GET"
                  ]
                }
              }
            },
            "addresses.modify": {
              "description": "Hypermedia links format",
              "type": "object",
              "required": [
                "rel",
                "href",
                "method"
              ],
              "properties": {
                "rel": {
                  "type": "string",
                  "default": "self"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "default": "https://api.byu.edu/byuapi/persons/v1/:byu_id/addresses/:address_type"
                },
                "method": {
                  "type": "string",
                  "default": "PUT",
                  "enum": [
                    "PUT"
                  ]
                }
              }
            },
            "addresses.delete": {
              "description": "Hypermedia links format",
              "type": "object",
              "required": [
                "rel",
                "href",
                "method"
              ],
              "properties": {
                "rel": {
                  "type": "string",
                  "default": "self"
                },
                "href": {
                  "type": "string",
                  "format": "uri",
                  "default": "https://api.byu.edu/byuapi/persons/v1/:byu_id/addresses/:address_type"
                },
                "method": {
                  "type": "string",
                  "default": "DELETE",
                  "enum": [
                    "DELETE"
                  ]
                }
              }
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "address_type": {
          "$ref": "#/definitions/address_type"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "address_line_1": {
          "$ref": "#/definitions/address_line_1"
        },
        "address_line_2": {
          "$ref": "#/definitions/address_line_2"
        },
        "address_line_3": {
          "$ref": "#/definitions/address_line_3"
        },
        "address_line_4": {
          "$ref": "#/definitions/address_line_4"
        },
        "building": {
          "$ref": "#/definitions/building"
        },
        "room": {
          "$ref": "#/definitions/room"
        },
        "country_code": {
          "$ref": "#/definitions/country_code"
        },
        "city": {
          "$ref": "#/definitions/city"
        },
        "state_code": {
          "$ref": "#/definitions/state_code"
        },
        "postal_code": {
          "$ref": "#/definitions/postal_code"
        },
        "unlisted": {
          "$ref": "#/definitions/unlisted"
        },
        "verified_flag": {
          "$ref": "#/definitions/verified_flag"
        }
      }
    },
    "address_line_1": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "default": " ",
          "x-template": ":address_line_1"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "3217 ITB",
        "api_type": "read-only"
      }
    },
    "address_line_2": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "default": " ",
          "x-template": ":address_line_2"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Provo, UT 84602",
        "api_type": "read-only"
      }
    },
    "address_line_3": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "default": " ",
          "x-template": ":address_line_3"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Wei Street",
        "api_type": "read-only"
      }
    },
    "address_line_4": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "default": " ",
          "x-template": ":address_line_4"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "The People's Republic of China",
        "api_type": "read-only"
      }
    },
    "address_put": {
      "type": "object",
      "required": [
        "address_type",
        "address_line_1",
        "address_line_2",
        "address_line_3",
        "address_line_4",
        "building",
        "room",
        "country_code",
        "city",
        "state_code",
        "postal_code",
        "unlisted"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "address_type": {
          "type": "string",
          "enum": [
            "PRM",
            "RES",
            "MAL",
            "WRK"
          ]
        },
        "address_line_1": {
          "type": "string",
          "pattern": "^( |([A-Za-z0-9-#.,]+ )*?[A-Za-z0-9-#.,]+)$",
          "maxLength": 40,
          "minLength": 1,
          "default": " "
        },
        "address_line_2": {
          "type": "string",
          "pattern": "^( |([A-Za-z0-9-#.,]+ )*?[A-Za-z0-9-#.,]+)$",
          "maxLength": 40,
          "minLength": 1,
          "default": " "
        },
        "address_line_3": {
          "type": "string",
          "pattern": "^( |([A-Za-z0-9-#.,]+ )*?[A-Za-z0-9-#.,]+)$",
          "maxLength": 40,
          "minLength": 1,
          "default": " "
        },
        "address_line_4": {
          "type": "string",
          "pattern": "^( |([A-Za-z0-9-#.,]+ )*?[A-Za-z0-9-#.,]+)$",
          "maxLength": 40,
          "minLength": 1,
          "default": " "
        },
        "building": {
          "type": "string",
          "pattern": "^( |[0-9A-Z?]{2,4})$",
          "maxLength": 4,
          "minLength": 1,
          "default": " "
        },
        "room": {
          "type": "string",
          "maxLength": 5,
          "minLength": 1,
          "default": " "
        },
        "country_code": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$"
        },
        "city": {
          "type": "string",
          "pattern": "^( |([A-Za-z-]+ )*?[A-Za-z-]+)$",
          "maxLength": 30,
          "minLength": 1,
          "default": " "
        },
        "state_code": {
          "type": "string",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4,
          "minLength": 2,
          "default": "??"
        },
        "postal_code": {
          "type": "string",
          "pattern": "^( |[A-Z0-9-]{1,20})$",
          "maxLength": 20,
          "minLength": 1,
          "default": " "
        },
        "unlisted": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "address_type": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "x-template": ":address_type",
          "enum": [
            "PRM",
            "RES",
            "MAL",
            "WRK"
          ]
        },
        "api_type": {
          "type": "string",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean",
          "default": true
        }
      },
      "example": {
        "value": "MAL",
        "api_type": "read-only",
        "key": true
      }
    },
    "addresses": {
      "description": "A collection of Addresses",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of addresses",
          "type": "object",
          "properties": {
            "addresses.info": {
              "$ref": "#/definitions/links"
            },
            "addresses.next": {
              "$ref": "#/definitions/links"
            },
            "addresses.prev": {
              "$ref": "#/definitions/links"
            },
            "addresses.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/address"
          },
          "x-variable": "addresses_values"
        }
      }
    },
    "all": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "basic",
          "addresses",
          "credentials",
          "email_addresses",
          "employee_summaries",
          "ethnicities",
          "family_phones",
          "government_records",
          "group_membership_events",
          "group_memberships",
          "groups_administered",
          "my_delegators",
          "my_guests",
          "id_cards",
          "languages",
          "personal_records",
          "phones",
          "relationships",
          "student_summaries"
        ]
      }
    },
    "associated_device": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 20
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "CARD_READER",
        "api_type": "read-only"
      }
    },
    "basic": {
      "description": "Basic person information",
      "type": "object",
      "required": [
        "byu_id"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a person",
          "type": "object",
          "properties": {
            "persons.info": {
              "$ref": "#/definitions/links"
            },
            "persons.modify": {
              "$ref": "#/definitions/links"
            },
            "persons.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "net_id": {
          "$ref": "#/definitions/net_id"
        },
        "deceased": {
          "$ref": "#/definitions/deceased"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "name_lnf": {
          "$ref": "#/definitions/name_lnf"
        },
        "name_fnf": {
          "$ref": "#/definitions/name_fnf"
        },
        "preferred_name": {
          "$ref": "#/definitions/preferred_name"
        },
        "surname": {
          "$ref": "#/definitions/surname"
        },
        "first_name": {
          "$ref": "#/definitions/first_name"
        },
        "middle_name": {
          "$ref": "#/definitions/middle_name"
        },
        "preferred_surname": {
          "$ref": "#/definitions/preferred_surname"
        },
        "rest_of_name": {
          "$ref": "#/definitions/rest_of_name"
        },
        "preferred_first_name": {
          "$ref": "#/definitions/preferred_first_name"
        },
        "suffix": {
          "$ref": "#/definitions/suffix"
        },
        "home_town": {
          "$ref": "#/definitions/home_town"
        },
        "home_state_code": {
          "$ref": "#/definitions/home_state_code"
        },
        "home_country_code": {
          "$ref": "#/definitions/home_country_code"
        },
        "high_school_code": {
          "$ref": "#/definitions/high_school_code"
        },
        "high_school_city": {
          "$ref": "#/definitions/high_school_city"
        },
        "high_school_state_code": {
          "$ref": "#/definitions/high_school_state_code"
        },
        "restricted": {
          "$ref": "#/definitions/restricted"
        },
        "merge_in_process": {
          "$ref": "#/definitions/merge_in_process"
        }
      }
    },
    "basic_put": {
      "description": "Basic person information to be updated",
      "type": "object",
      "required": [
        "surname",
        "first_name",
        "preferred_surname",
        "preferred_first_name",
        "middle_name",
        "suffix",
        "home_town",
        "home_state_code",
        "home_country_code",
        "high_school_code"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "surname": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "first_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "preferred_surname": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "preferred_first_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "middle_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "suffix": {
          "type": "string",
          "description": "Generational suffix for name: Roman Numeral, JR, SR, Jr, or Sr",
          "default": " ",
          "pattern": "^( |Sr|SR|JR|Jr|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))$",
          "maxLength": 10,
          "minLength": 1
        },
        "home_town": {
          "type": "string",
          "maxLength": 30
        },
        "home_state_code": {
          "type": "string",
          "default": "??",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4
        },
        "home_country_code": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$",
          "maxLength": 3
        },
        "high_school_code": {
          "type": "string",
          "pattern": "^( |[0-9]{6})$",
          "maxLength": 6
        }
      }
    },
    "beard_flag": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "birth_country_code": {
      "description": "The birth country code, validated through the meta/country service",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1,
          "default": " "
        },
        "description": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "default": " "
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "CAN",
        "description": "Canada",
        "api_type": "read-only"
      }
    },
    "building": {
      "description": "The building code, validated through the meta/building service, set only for a BYU office",
      "type": "object",
      "required": [
        "value",
        "description",
        "long_description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4,
          "minLength": 1,
          "default": " ",
          "x-template": ":building_code"
        },
        "description": {
          "type": "string",
          "maxLength": 15,
          "x-template": ":building_name"
        },
        "long_description": {
          "type": "string",
          "maxLength": 30,
          "x-template": ":long_building_name"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "ITB",
        "description": "Information Tec",
        "long_description": "Information Technology Bldg",
        "api_type": "read-only"
      }
    },
    "byu_id": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$",
          "x-template": ":byu_id"
        },
        "description": {
          "type": "string",
          "pattern": "^(?=.{2,}?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "x-template": ":name",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "default": "system",
          "enum": [
            "system"
          ]
        },
        "key": {
          "type": "boolean",
          "default": true
        }
      },
      "example": {
        "value": "023296921",
        "description": "John Bench",
        "api_type": "system",
        "key": true
      }
    },
    "categories": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 100
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Academic, Financial, Personal",
        "api_type": "read-only"
      }
    },
    "cell_flag": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api_type": "read-only"
      }
    },
    "citizenship_country_code": {
      "description": "The citizenship country code, validated through the meta/country service",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$"
        },
        "description": {
          "type": "string",
          "maxLength": 35
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "USA",
        "description": "United States of America",
        "api_type": "read-only"
      }
    },
    "city": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1,
          "default": " ",
          "x-template": ":city"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Provo",
        "api_type": "read-only"
      }
    },
    "contact": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "basic",
          "addresses",
          "email_addresses",
          "family_phones",
          "phones"
        ]
      }
    },
    "contact_person": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Joseph Smith",
        "api_type": "modifiable"
      }
    },
    "contexts_available": {
      "description": "Pre-designated collections of field_sets",
      "type": "object",
      "properties": {
        "all": {
          "$ref": "#/definitions/all"
        },
        "contact": {
          "$ref": "#/definitions/contact"
        },
        "official": {
          "$ref": "#/definitions/official"
        },
        "emergency": {
          "$ref": "#/definitions/emergency"
        },
        "marriott_school": {
          "$ref": "#/definitions/marriott_school"
        }
      }
    },
    "country_code": {
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1,
          "default": " ",
          "x-template": ":country_code"
        },
        "description": {
          "type": "string",
          "maxLength": 35,
          "x-template": ":country_name"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "USA",
        "description": "United States of America",
        "api_type": "read-only"
      }
    },
    "created_by_id": {
      "description": "The BYU ID of the person who performed the creation",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "description"
      ],
      "properties": {
        "value": {
          "type": "string",
          "x-template": ":created_by_id"
        },
        "api_type": {
          "type": "string",
          "default": "system",
          "enum": [
            "system"
          ]
        },
        "description": {
          "type": "string",
          "pattern": "^(|(?=.{2,}?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+)$",
          "maxLength": 50,
          "x-template": ":created_by_name"
        }
      },
      "example": {
        "value": "584584584",
        "api_type": "system",
        "description": "Joe Faculty"
      }
    },
    "credential": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a credential",
          "type": "object",
          "properties": {
            "credentials.info": {
              "$ref": "#/definitions/links"
            },
            "credentials.modify": {
              "$ref": "#/definitions/links"
            },
            "credentials.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "credential_id": {
          "$ref": "#/definitions/credential_id"
        },
        "credential_type": {
          "$ref": "#/definitions/credential_type"
        },
        "user_name": {
          "$ref": "#/definitions/user_name"
        },
        "lost_or_stolen": {
          "$ref": "#/definitions/lost_or_stolen"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "issuing_location": {
          "$ref": "#/definitions/issuing_location"
        },
        "physical_form": {
          "$ref": "#/definitions/physical_form"
        },
        "associated_device": {
          "$ref": "#/definitions/associated_device"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        }
      }
    },
    "credential_id": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "credential_put": {
      "type": "object",
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "user_name": {
          "type": "string",
          "maxLength": 100,
          "default": " "
        },
        "lost_or_stolen": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "status": {
          "type": "string",
          "maxLength": 20,
          "default": "ACTIVE"
        },
        "expiration_date": {
          "type": "string",
          "format": "date",
          "default": ""
        },
        "issuing_location": {
          "type": "string",
          "maxLength": 20,
          "default": " "
        },
        "physical_form": {
          "type": "string",
          "maxLength": 20,
          "default": " "
        },
        "associated_device": {
          "type": "string",
          "maxLength": 20,
          "default": " "
        },
        "scoped_affiliation": {
          "type": "string",
          "maxLength": 100,
          "default": " "
        }
      }
    },
    "credential_type": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "BYU_HAWAII_ID",
            "BYU_IDAHO_ID",
            "FACEBOOK_ID",
            "GOOGLE_ID",
            "ID_CARD",
            "LDS_ACCOUNT_ID",
            "LDS_CMIS_ID",
            "NET_ID",
            "PROX_CARD",
            "SEMINARY_STUDENT_ID",
            "WSO2_CLIENT_ID"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "NET_ID",
        "api_type": "read-only"
      }
    },
    "credentials": {
      "description": "The credentials sub-resource data",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of credentials",
          "type": "object",
          "properties": {
            "credentials.info": {
              "$ref": "#/definitions/links"
            },
            "credentials.next": {
              "$ref": "#/definitions/links"
            },
            "credentials.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/credential"
          }
        }
      }
    },
    "current_student": {
      "description": "Indicates whether the person is currently a BYU student",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "date_of_birth": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "system"
      }
    },
    "date_of_death": {
      "description": "The date of the person's death",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "read-only"
      }
    },
    "date_time_accepted": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_created": {
      "description": "The date/time when the entity was created, given in GMT (Greenwich Mean Time)",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time",
          "x-template": ":date_time_created"
        },
        "api_type": {
          "type": "string",
          "default":"system",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_granted": {
      "description": "The date/time when the person was added to the group",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string"
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_inactivated": {
      "description": "The date/time the group or group membership was de-activated",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_revoked": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_started": {
      "description": "The start date/time of the the guest access operation",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_updated": {
      "description": "The most recent date/time updated, given in GMT (Greenwich Mean Time)",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "x-template": ":date_time_updated",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "default": "system",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "date_time_verified": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "deceased": {
      "description": "Whether or not the person is deceased",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "default_field_sets": {
      "description": "Default Field Sets",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "default": "basic",
          "enum": [
            "basic"
          ]
        }
      }
    },
    "delegator_id": {
      "description": "The BYU ID of the delegator in an access delegation relationship",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "794530501",
        "api_type": "read-only"
      }
    },
    "delegator_name_fnf": {
      "description": "The guest's name, first-name-first",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 131
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "delegator_name_lnf": {
      "description": "The guest's name, last-name-first",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 132
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Graser, Floyd Robert, III",
        "api_type": "read-only"
      }
    },
    "delegator_net_id": {
      "description": "The guest's Net ID",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9]{1,7}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "delegator_preferred_first_name": {
      "description": "The guest's preferred first name",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Robert",
        "api_type": "read-only"
      }
    },
    "delegator_preferred_name": {
      "description": "The guest's preferred name, derived from the preferred_first_name and preferred_surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 66
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Robert Graser",
        "api_type": "read-only"
      }
    },
    "delegator_preferred_surname": {
      "description": "The guest's preferred surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "delegator_rest_of_name": {
      "description": "The guest's complete name, excluding the surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 80
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert",
        "api_type": "read-only"
      }
    },
    "delegator_surname": {
      "description": "The guest's surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "department": {
      "description": "The person's department",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "related_resources",
        "domain"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "related"
          ]
        },
        "related_resources": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      },
      "example": {
        "value": "OIT-App Dev Student Info Mgmt",
        "api-type": "related",
        "related_resource": "https://api.byu.edu/byuapi/employees",
        "domain": "https://api.byu.edu/byuapi/meta/departments"
      }
    },
    "dtf_flag": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "effective_date": {
      "description": "The date the permissions become (or became) active",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "system"
      }
    },
    "eligible_to_register": {
      "description": "Indicates whether the person is currently eligible to register",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api-type": "derived"
      }
    },
    "email_address": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for an email address",
          "type": "object",
          "properties": {
            "email_addresses.info": {
              "$ref": "#/definitions/links"
            },
            "email_addresses.modify": {
              "$ref": "#/definitions/links"
            },
            "email_addresses.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "email_address_type": {
          "$ref": "#/definitions/email_address_type"
        },
        "email_address": {
          "$ref": "#/definitions/email_address_value"
        },
        "unlisted": {
          "$ref": "#/definitions/unlisted"
        },
        "verified_flag": {
          "$ref": "#/definitions/verified_flag"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        }
      }
    },
    "email_address_type": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "PERSONAL",
            "WORK",
            "SECURITY"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "string"
        }
      },
      "example": {
        "value": "PERSONAL",
        "api_type": "modifiable",
        "key": true
      }
    },
    "email_address_value": {
      "description": "The email address",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "email",
          "maxLength": 70,
          "minLength": 7
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "donald_duck@gmail.com`",
        "api-type": "modifiable"
      }
    },
    "email_addresses": {
      "description": "A collection of email addresses",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of email addresses",
          "type": "object",
          "properties": {
            "email_addresses.info": {
              "$ref": "#/definitions/links"
            },
            "email_addresses.next": {
              "$ref": "#/definitions/links"
            },
            "email_addresses.prev": {
              "$ref": "#/definitions/links"
            },
            "email_addresses.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/email_address"
          }
        }
      }
    },
    "email_put": {
      "type": "object",
      "required": [
        "email_address",
        "unlisted"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "email_address": {
          "type": "string",
          "format": "email"
        },
        "unlisted": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "verified_f": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "emergency": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "family_phones",
          "relationships"
        ]
      }
    },
    "employee_summaries": {
      "description": "Employee summaries for a person",
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for employee summaries",
          "type": "object",
          "properties": {
            "employee_summaries.info": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "employee_type": {
          "$ref": "#/definitions/employee_type"
        },
        "department": {
          "$ref": "#/definitions/department"
        },
        "job_title": {
          "$ref": "#/definitions/job_title"
        },
        "hire_date": {
          "$ref": "#/definitions/hire_date"
        },
        "reports_to_id": {
          "$ref": "#/definitions/reports_to_id"
        }
      }
    },
    "employee_type": {
      "description": "The employee type, validated through the meta/employee_type service",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type",
        "related_resources"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 10
        },
        "description": {
          "type": "string"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "related"
          ]
        },
        "related_resources": {
          "type": "string"
        }
      },
      "example": {
        "value": "STD-PT-ACT",
        "description": "Student Part-Time Active",
        "api-type": "related"
      }
    },
    "error": {
      "description": "Error Information",
      "type": "object",
      "required": [
        "return_code",
        "explanation",
        "error"
      ],
      "properties": {
        "return_code": {
          "type": "integer",
          "format": "int32"
        },
        "explanation": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ethnicities": {
      "description": "A collection of Ethnicities",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of ethnicities",
          "type": "object",
          "properties": {
            "addresses.info": {
              "$ref": "#/definitions/links"
            },
            "addresses.next": {
              "$ref": "#/definitions/links"
            },
            "addresses.prev": {
              "$ref": "#/definitions/links"
            },
            "addresses.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ethnicity"
          }
        }
      }
    },
    "ethnicity": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of ethnicities",
          "type": "object",
          "properties": {
            "addresses.info": {
              "$ref": "#/definitions/links"
            },
            "addresses.next": {
              "$ref": "#/definitions/links"
            },
            "addresses.prev": {
              "$ref": "#/definitions/links"
            },
            "addresses.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "ethnicity_code": {
          "$ref": "#/definitions/ethnicity_code"
        },
        "primary_flag": {
          "$ref": "#/definitions/primary_flag"
        },
        "active": {
          "$ref": "#/definitions/active"
        }
      }
    },
    "ethnicity_code": {
      "type": "object",
      "required": [
        "value",
        "description",
        "long_description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "CAU",
            "AMI",
            "BLK",
            "PAC",
            "???",
            "HIS",
            "WHI",
            "OTH",
            "ASN",
            "HAW"
          ]
        },
        "description": {
          "type": "string",
          "maxLength": 15
        },
        "long_description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "AMI",
        "description": "Native American",
        "long_description": "American Indian/Alaskan Native",
        "api_type": "read-only"
      }
    },
    "ethnicity_put": {
      "type": "object",
      "required": [
        "primary_flag"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "primary_flag": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "expiration_date": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "system"
      }
    },
    "family_phone": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single family phone",
          "type": "object",
          "properties": {
            "family_phones.info": {
              "$ref": "#/definitions/links"
            },
            "family_phones.modify": {
              "$ref": "#/definitions/links"
            },
            "family_phones.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "phone_type": {
          "$ref": "#/definitions/phone_type"
        },
        "phone_number": {
          "$ref": "#/definitions/phone_number"
        },
        "country_code": {
          "$ref": "#/definitions/country_code"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "cell_flag": {
          "$ref": "#/definitions/cell_flag"
        },
        "texts_okay": {
          "$ref": "#/definitions/texts_okay"
        },
        "preferred_language_code": {
          "$ref": "#/definitions/preferred_language_code"
        },
        "contact_person": {
          "$ref": "#/definitions/contact_person"
        },
        "relationship": {
          "$ref": "#/definitions/relationship"
        }
      }
    },
    "family_phone_put": {
      "type": "object",
      "required": [
        "phone_number",
        "country_code",
        "cell_flag",
        "contact_person",
        "relationship"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "phone_type": {
          "type": "string",
          "maxLength": 3,
          "enum": [
            "EMR",
            "PRM"
          ]
        },
        "phone_number": {
          "type": "string",
          "maxLength": 30
        },
        "country_code": {
          "type": "string",
          "maxLength": 3
        },
        "cell_flag": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "preferred_language_code": {
          "type": "string",
          "maxLength": 2,
          "minLength": 2,
          "default": "EN"
        },
        "texts_okay": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "contact_person": {
          "type": "string",
          "maxLength": 30
        },
        "relationship": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "family_phones": {
      "description": "A collection of family phones",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of family phones",
          "type": "object",
          "properties": {
            "family_phones.info": {
              "$ref": "#/definitions/links"
            },
            "family_phones.next": {
              "$ref": "#/definitions/links"
            },
            "family_phones.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/family_phone"
          }
        }
      }
    },
    "field_sets_available": {
      "description": "Field Sets Available",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "basic",
          "addresses",
          "credentials",
          "email_addresses",
          "employee_summaries",
          "ethnicities",
          "family_phones",
          "government_records",
          "group_membership_events",
          "group_memberships",
          "groups_administered",
          "id_cards",
          "languages",
          "my_delegators",
          "my_guests",
          "personal_reccords",
          "phones",
          "relationships",
          "student_summaries"
        ]
      }
    },
    "field_sets_returned": {
      "description": "Field Sets that are returned",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "basic",
          "addresses",
          "credentials",
          "email_addresses",
          "employee_summaries",
          "ethnicities",
          "family_phones",
          "government_records",
          "group_membership_events",
          "group_memberships",
          "groups_administered",
          "id_cards",
          "languages",
          "my_delegators",
          "my_guests",
          "personal_records",
          "phones",
          "relationships",
          "student_summaries"
        ]
      }
    },
    "first_name": {
      "description": "The person's first given name",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "government_record_put": {
      "description": "Basic person information to be updated",
      "type": "object",
      "required": [
        "citizenship_country_code",
        "birth_country_code",
        "ssn",
        "ssn_verification_date",
        "visa_type",
        "visa_type_source",
        "i20_expiration_date"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "citizenship_country_code": {
          "type": "string",
          "maxLength": 3
        },
        "birth_country_code": {
          "type": "string",
          "maxLength": 3
        },
        "ssn": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "ssn_verification_date": {
          "type": "string",
          "format": "date"
        },
        "visa_type": {
          "type": "string",
          "pattern": "^( |[A-Z0-9?]{1,3})$",
          "maxLength": 3
        },
        "visa_type_source": {
          "type": "string",
          "default": " ",
          "enum": [
            "ADM",
            "FSA",
            "HR",
            "INTL",
            " "
          ]
        },
        "i20_expiration_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "government_records": {
      "description": "Basic person information",
      "type": "object",
      "required": [
        "byu_id"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a person",
          "type": "object",
          "properties": {
            "persons.info": {
              "$ref": "#/definitions/links"
            },
            "persons.modify": {
              "$ref": "#/definitions/links"
            },
            "persons.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "net_id": {
          "$ref": "#/definitions/net_id"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "citizenship_country_code": {
          "$ref": "#/definitions/citizenship_country_code"
        },
        "birth_country_code": {
          "$ref": "#/definitions/birth_country_code"
        },
        "ssn": {
          "$ref": "#/definitions/ssn"
        },
        "ssn_verification_date": {
          "$ref": "#/definitions/ssn_verification_date"
        },
        "visa_type": {
          "$ref": "#/definitions/visa_type"
        },
        "visa_type_source": {
          "$ref": "#/definitions/visa_type_source"
        },
        "i20_expiration_date": {
          "$ref": "#/definitions/i20_expiration_date"
        }
      }
    },
    "granted_by_id": {
      "description": "The BYU ID of the administrator who added the person to the group",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "api_type": {
          "type": "string"
        }
      },
      "example": {
        "value": "234432234"
      }
    },
    "group_administered": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single group administration",
          "type": "object",
          "properties": {
            "groups_administered.info": {
              "$ref": "#/definitions/links"
            },
            "groups_administered.modify": {
              "$ref": "#/definitions/links"
            },
            "groups_administered.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "group_id": {
          "$ref": "#/definitions/group_id"
        },
        "group_type": {
          "$ref": "#/definitions/group_type"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "effective_date": {
          "$ref": "#/definitions/effective_date"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "group_description": {
          "$ref": "#/definitions/group_description"
        },
        "date_time_inactivated": {
          "$ref": "#/definitions/date_time_inactivated"
        },
        "inactivated_by_id": {
          "$ref": "#/definitions/inactivated_by_id"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "job_title": {
          "$ref": "#/definitions/job_title"
        },
        "department": {
          "$ref": "#/definitions/department"
        },
        "employee_type": {
          "$ref": "#/definitions/employee_type"
        }
      }
    },
    "group_administered_put": {
      "type": "object",
      "required": [
        "group_id",
        "group_type",
        "effective_date",
        "expiration_date",
        "group_description",
        "date_time_inactivated",
        "inactivated_by_id"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "group_id": {
          "type": "string",
          "maxLength": 30
        },
        "group_type": {
          "type": "string",
          "maxLength": 1,
          "enum": [
            "A",
            "M",
            "I"
          ]
        },
        "effective_date": {
          "type": "string",
          "format": "date"
        },
        "expiration_date": {
          "type": "string",
          "format": "date"
        },
        "group_description": {
          "type": "string",
          "maxLength": 4000
        },
        "date_time_inactivated": {
          "type": "string",
          "format": "date"
        },
        "inactivated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        }
      }
    },
    "group_description": {
      "description": "Description of the group",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4000
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      }
    },
    "group_id": {
      "description": "The ID created for the group",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9'_-]{0,28}(|[a-zA-Z0-9])$",
          "maxLength": 30
        },
        "description": {
          "type": "string",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "vserv",
        "description": "VPN:50-Admin Interface",
        "api_type": "modifiable",
        "key": true
      }
    },
    "group_membership": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single group membership",
          "type": "object",
          "properties": {
            "group_memberships.info": {
              "$ref": "#/definitions/links"
            },
            "group_memberships.modify": {
              "$ref": "#/definitions/links"
            },
            "group_memberships.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "group_id": {
          "$ref": "#/definitions/group_id"
        },
        "group_type": {
          "$ref": "#/definitions/group_type"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "job_title": {
          "$ref": "#/definitions/job_title"
        },
        "department": {
          "$ref": "#/definitions/department"
        },
        "employee_type": {
          "$ref": "#/definitions/employee_type"
        }
      }
    },
    "group_membership_event": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single group membership event",
          "type": "object",
          "properties": {
            "group_membership_events.info": {
              "$ref": "#/definitions/links"
            },
            "group_membership_events.modify": {
              "$ref": "#/definitions/links"
            },
            "group_membership_events.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "person_group_event_id": {
          "$ref": "#/definitions/person_group_event_id"
        },
        "group_id": {
          "$ref": "#/definitions/group_id"
        },
        "group_type": {
          "$ref": "#/definitions/group_type"
        },
        "granted_by_id": {
          "$ref": "#/definitions/granted_by_id"
        },
        "date_time_granted": {
          "$ref": "#/definitions/date_time_granted"
        },
        "effective_date": {
          "$ref": "#/definitions/effective_date"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "group_description": {
          "$ref": "#/definitions/group_description"
        },
        "date_time_inactivated": {
          "$ref": "#/definitions/date_time_inactivated"
        },
        "inactivated_by_id": {
          "$ref": "#/definitions/inactivated_by_id"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "job_title": {
          "$ref": "#/definitions/job_title"
        },
        "department": {
          "$ref": "#/definitions/department"
        },
        "employee_type": {
          "$ref": "#/definitions/employee_type"
        }
      }
    },
    "group_membership_events": {
      "description": "The group event history for the specified person/group",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for group membership events collection",
          "type": "object",
          "properties": {
            "group_membership_events.info": {
              "$ref": "#/definitions/links"
            },
            "group_membership_events.next": {
              "$ref": "#/definitions/links"
            },
            "group_membership_events.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/group_membership_event"
          }
        }
      }
    },
    "group_membership_put": {
      "type": "object",
      "required": [
        "group_id",
        "group_type"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "group_id": {
          "description": "The ID created for the group",
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string",
              "maxLength": 30
            }
          }
        },
        "group_type": {
          "description": "The type of group -- A(ctive), M(anual), or I(mplied)",
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string",
              "maxLength": 1,
              "enum": [
                "A",
                "M",
                "I"
              ]
            }
          }
        }
      }
    },
    "group_memberships": {
      "description": "A person's group memberships",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for group membership collection",
          "type": "object",
          "properties": {
            "group_memberships.info": {
              "$ref": "#/definitions/links"
            },
            "group_memberships.next": {
              "$ref": "#/definitions/links"
            },
            "group_memberships.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/group_membership"
          }
        }
      }
    },
    "group_type": {
      "description": "The type of group -- A(ctive), M(anual), or I(mplied)",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 1,
          "enum": [
            "A",
            "M",
            "I"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "M",
        "api_type": "modifiable"
      }
    },
    "groups_administered": {
      "description": "The groups a person administers from group_administrator table",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for collection of groups administered",
          "type": "object",
          "properties": {
            "groups_administered.info": {
              "$ref": "#/definitions/links"
            },
            "groups_administered.next": {
              "$ref": "#/definitions/links"
            },
            "groups_administered.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/group_administered"
          }
        }
      }
    },
    "guest_id": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "794530501",
        "api_type": "read-only"
      }
    },
    "guest_name_fnf": {
      "description": "The name of the guest in first-name-first format",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 131
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "guest_name_lnf": {
      "description": "The name of the guest in last-name-first format",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 132
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Graser, Floyd Robert",
        "api_type": "read-only"
      }
    },
    "guest_net_id": {
      "description": "The Net ID of the guest",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "guest_preferred_first_name": {
      "description": "The preferred first name of the guest",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Robert",
        "api_type": "read-only"
      }
    },
    "guest_preferred_name": {
      "description": "The preferred name of the guest, derived from preferred_first_name and preferred_surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 131
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Robert Graser",
        "api_type": "read-only"
      }
    },
    "guest_preferred_surname": {
      "description": "The preferred_surname of the guest",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "guest_rest_of_name": {
      "description": "The guest's complete name, excluding the surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 80
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert",
        "api_type": "read-only"
      }
    },
    "guest_surname": {
      "description": "The surname of the guest",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "high_school_city": {
      "description": "The city the high school is located inside",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Provo",
        "api_type": "read-only"
      }
    },
    "high_school_code": {
      "description": "Code indicating the person's high school",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^([]*|[0-9]{6})$",
          "maxLength": 6
        },
        "description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "domain": {
          "type": "string"
        }
      },
      "example": {
        "value": "450325",
        "description": "Provo High",
        "api_type": "read-only"
      }
    },
    "high_school_state_code": {
      "description": "The state code that the high school is located inside",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "??",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4
        },
        "description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "UT",
        "description": "Utah",
        "api_type": "read-only"
      }
    },
    "hire_date": {
      "description": "The person's BYU hire date",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "related_resource"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "related"
          ]
        },
        "related_resource": {
          "type": "string"
        }
      },
      "example": {
        "value": "2015-06-24",
        "api-type": "related"
      }
    },
    "home_country_code": {
      "description": "The home country code, validated through the meta/country service",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$",
          "maxLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 35
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "USA",
        "description": "United States of America",
        "api_type": "read-only"
      }
    },
    "home_state_code": {
      "description": "The home state or province, validated through the meta/state service",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "??",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4
        },
        "description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "UT",
        "description": "Utah",
        "api_type": "read-only"
      }
    },
    "home_town": {
      "description": "The person's home town",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^([ ]|(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+)$",
          "maxLength": 30,
          "minLength": 1,
          "default": " "
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Provo",
        "api_type": "read-only"
      }
    },
    "i20_expiration_date": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "system",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "system"
      }
    },
    "id_cards": {
      "description": "ID Card information belonging to a person",
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links that impact an individual identity in the collection",
          "type": "object",
          "properties": {
            "id_cards.info": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "site_id": {
          "$ref": "#/definitions/site_id"
        },
        "dtf_flag": {
          "$ref": "#/definitions/dtf_flag"
        },
        "unlisted": {
          "$ref": "#/definitions/unlisted"
        },
        "printed_name": {
          "$ref": "#/definitions/printed_name"
        },
        "primary_role": {
          "$ref": "#/definitions/primary_role"
        },
        "secondary_role": {
          "$ref": "#/definitions/secondary_role"
        },
        "beard_flag": {
          "$ref": "#/definitions/beard_flag"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "use_preferred_name_on_id_card": {
          "$ref": "#/definitions/use_preferred_name_on_id_card"
        }
      }
    },
    "id_cards_put": {
      "description": "ID Card information belonging to a person",
      "type": "object",
      "required": [
        "credential_id",
        "site_id",
        "dtf_flag",
        "unlisted",
        "printed_name",
        "primary_role",
        "secondary_role",
        "beard_flag",
        "use_preferred_name_on_id_card",
        "expiration_date",
        "lost_or_stolen",
        "prox_id"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "credential_id": {
          "description": "BYU_ID + ISSUE_NUMBER",
          "type": "string",
          "pattern": "^[0-9]{11}$"
        },
        "expiration_date": {
          "type": "string",
          "format": "date"
        },
        "site_id": {
          "type": "string",
          "maxLength": 12
        },
        "dtf_flag": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "unlisted": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "printed_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        },
        "lost_or_stolen": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "prox_id": {
          "type": "string",
          "pattern": "^[0-9]{3,7}$"
        },
        "primary_role": {
          "type": "string",
          "enum": [
            "Affiliate",
            "Employee",
            "Faculty",
            "Student",
            "Do Not Issue"
          ]
        },
        "secondary_role": {
          "type": "string",
          "maxLength": 30
        },
        "beard_flag": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "use_preferred_name_on_id_card": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "inactivated_by_id": {
      "description": "The BYU ID of the person or process that deactivated the group or group membership",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "description": {
          "type": "string",
          "pattern": "^(?=.{2,}?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      }
    },
    "issuing_location": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 20,
          "minLength": 1,
          "default": " "
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "ID_CENTER",
        "api_type": "read-only"
      }
    },
    "job_title": {
      "description": "The person's job title",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type",
        "related_resources"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "description": {
          "type": "string"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "related"
          ]
        },
        "related_resources": {
          "type": "string"
        }
      },
      "example": {
        "value": "SR Info Systems Analyst",
        "api-type": "related",
        "related_resource": "https://api.byu.edu/byuapi/employees"
      }
    },
    "language": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single language",
          "type": "object",
          "properties": {
            "addresses.info": {
              "$ref": "#/definitions/links"
            },
            "addresses.modify": {
              "$ref": "#/definitions/links"
            },
            "addresses.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "language_code ": {
          "$ref": "#/definitions/language_code"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "speak_proficiency": {
          "$ref": "#/definitions/speak_proficiency"
        },
        "read_proficiency": {
          "$ref": "#/definitions/read_proficiency"
        },
        "write_proficiency": {
          "$ref": "#/definitions/write_proficiency"
        },
        "native": {
          "$ref": "#/definitions/native"
        },
        "translator": {
          "$ref": "#/definitions/translator"
        }
      }
    },
    "language_code": {
      "type": "object",
      "required": [
        "value",
        "description",
        "long_description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 2
        },
        "description": {
          "type": "string",
          "maxLength": 15
        },
        "long_description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "ES",
        "description": "Spanish",
        "long_description": "Spanish",
        "api_type": "read-only",
        "key": true
      }
    },
    "language_put": {
      "type": "object",
      "required": [
        "speak_proficiency",
        "read_proficiency",
        "write_proficiency",
        "native",
        "translator"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "speak_proficiency": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "read_proficiency": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "write_proficiency": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "native": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "translator": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "languages": {
      "description": "A collection of languages that a person uses",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links that impact the identity collection",
          "type": "object",
          "properties": {
            "languages.info": {
              "$ref": "#/definitions/links"
            },
            "languages.next": {
              "$ref": "#/definitions/links"
            },
            "languages.prev": {
              "$ref": "#/definitions/links"
            },
            "languages.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/language"
          }
        }
      }
    },
    "lds_confirmation_date": {
      "description": "The date that the person was confirmed a member of The Church of Jesus Christ of Latter-day Saints",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "2014-05-11",
        "api_type": "system"
      }
    },
    "lds_unit_number": {
      "description": "The Ward/Branch Unit Number",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^( |[0-9]{7})$"
        },
        "description": {
          "type": "string",
          "maxLength": 60
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "1991159",
        "description": "OREM 14TH",
        "api_type": "read-only"
      }
    },
    "links": {
      "description": "Hypermedia links format",
      "type": "object",
      "required": [
        "rel",
        "href",
        "method"
      ],
      "properties": {
        "rel": {
          "type": "string"
        },
        "href": {
          "type": "string",
          "format": "uri"
        },
        "method": {
          "type": "string",
          "enum": [
            "DELETE",
            "GET",
            "OPTIONS",
            "POST",
            "PUT"
          ]
        }
      }
    },
    "lost_or_stolen": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "marital_status": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "?",
          "enum": [
            "D",
            "M",
            "S",
            "W",
            "?"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "S",
        "api_type": "read-only"
      }
    },
    "marriott_school": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "basic",
          "addresses",
          "credentials",
          "email_addresses",
          "employee_summaries",
          "ethnicities",
          "family_phones",
          "government_records",
          "group_memberships",
          "groups_administered",
          "id_cards",
          "languages",
          "personal_records",
          "phones",
          "relationships",
          "student_summaries"
        ]
      }
    },
    "merge_in_process": {
      "description": "Indicates whether a merge is pending for this record, in which case updates are not allowed",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "derived"
      }
    },
    "middle_name": {
      "description": "The person's middle name",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "my_delegator": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for an access delegation",
          "type": "object",
          "properties": {
            "my_delegators.info": {
              "$ref": "#/definitions/links"
            },
            "my_delegators.modify": {
              "$ref": "#/definitions/links"
            },
            "my_delegators.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "access_delegation_id": {
          "$ref": "#/definitions/access_delegation_id"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "delegator_id": {
          "$ref": "#/definitions/delegator_id"
        },
        "delegator_net_id": {
          "$ref": "#/definitions/delegator_net_id"
        },
        "delegator_name_lnf": {
          "$ref": "#/definitions/delegator_name_lnf"
        },
        "delegator_name_fnf": {
          "$ref": "#/definitions/delegator_name_fnf"
        },
        "delegator_preferred_name": {
          "$ref": "#/definitions/delegator_preferred_name"
        },
        "delegator_surname": {
          "$ref": "#/definitions/delegator_surname"
        },
        "delegator_rest_of_name": {
          "$ref": "#/definitions/delegator_rest_of_name"
        },
        "delegator_preferred_surname": {
          "$ref": "#/definitions/delegator_preferred_surname"
        },
        "delegator_preferred_first_name": {
          "$ref": "#/definitions/delegator_preferred_first_name"
        },
        "access_type": {
          "$ref": "#/definitions/access_type"
        },
        "categories": {
          "$ref": "#/definitions/categories"
        },
        "date_time_accepted": {
          "$ref": "#/definitions/date_time_accepted"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "date_time_revoked": {
          "$ref": "#/definitions/date_time_revoked"
        },
        "revoked_by_id": {
          "$ref": "#/definitions/revoked_by_id"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "operations_performed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation_performed"
          }
        }
      }
    },
    "my_delegator_put": {
      "type": "object",
      "required": [
        "access_type",
        "categories",
        "delegator_id",
        "action"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "delegator_id": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "access_type": {
          "type": "string",
          "enum": [
            "L",
            "W",
            "B"
          ]
        },
        "categories": {
          "type": "string",
          "maxLength": 100
        },
        "action": {
          "type": "string",
          "enum": [
            "accept",
            "revoke"
          ]
        }
      }
    },
    "my_delegators": {
      "description": "Collection of persons who have been delegator access to another person's records",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of my_delegators",
          "type": "object",
          "properties": {
            "my_delegators.info": {
              "$ref": "#/definitions/links"
            },
            "my_delegators.next": {
              "$ref": "#/definitions/links"
            },
            "my_delegators.prev": {
              "$ref": "#/definitions/links"
            },
            "my_delegators.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/my_delegator"
          }
        }
      }
    },
    "my_guest": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single guest",
          "type": "object",
          "properties": {
            "guests.info": {
              "$ref": "#/definitions/links"
            },
            "guests.modify": {
              "$ref": "#/definitions/links"
            },
            "guests.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "access_delegation_id": {
          "$ref": "#/definitions/access_delegation_id"
        },
        "guest_id": {
          "$ref": "#/definitions/guest_id"
        },
        "guest_net_id": {
          "$ref": "#/definitions/guest_net_id"
        },
        "guest_name_lnf": {
          "$ref": "#/definitions/guest_name_lnf"
        },
        "guest_name_fnf": {
          "$ref": "#/definitions/guest_name_fnf"
        },
        "guest_preferred_name": {
          "$ref": "#/definitions/guest_preferred_name"
        },
        "guest_surname": {
          "$ref": "#/definitions/guest_surname"
        },
        "guest_rest_of_name": {
          "$ref": "#/definitions/guest_rest_of_name"
        },
        "guest_preferred_surname": {
          "$ref": "#/definitions/guest_preferred_surname"
        },
        "guest_preferred_first_name": {
          "$ref": "#/definitions/guest_preferred_first_name"
        },
        "access_type": {
          "$ref": "#/definitions/access_type"
        },
        "categories": {
          "$ref": "#/definitions/categories"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "date_time_accepted": {
          "$ref": "#/definitions/date_time_accepted"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_revoked": {
          "$ref": "#/definitions/date_time_revoked"
        },
        "revoked_by_id": {
          "$ref": "#/definitions/revoked_by_id"
        },
        "expiration_date": {
          "$ref": "#/definitions/expiration_date"
        },
        "operations_performed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation_performed"
          }
        }
      }
    },
    "my_guest_post": {
      "type": "object",
      "required": [
        "guest_id",
        "access_type",
        "categories",
        "expiration_date"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "guest_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "access_type": {
          "type": "string",
          "maxLength": 1,
          "enum": [
            "L",
            "W",
            "B"
          ]
        },
        "categories": {
          "type": "string",
          "maxLength": 100
        },
        "expiration_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "my_guest_put": {
      "type": "object",
      "required": [
        "guest_id",
        "access_type",
        "categories",
        "action",
        "expiration_date"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "guest_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "access_type": {
          "type": "string",
          "maxLength": 1,
          "enum": [
            "L",
            "W",
            "B"
          ]
        },
        "categories": {
          "type": "string",
          "maxLength": 100
        },
        "action": {
          "type": "string",
          "enum": [
            " ",
            "revoked"
          ]
        },
        "expiration_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "my_guests": {
      "description": "Collection of persons who have been delegator access to another person's records",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links that impact the collection",
          "type": "object",
          "properties": {
            "guests.info": {
              "$ref": "#/definitions/links"
            },
            "guests.next": {
              "$ref": "#/definitions/links"
            },
            "guests.prev": {
              "$ref": "#/definitions/links"
            },
            "guests.modify": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/my_guest"
          }
        }
      }
    },
    "name_fnf": {
      "description": "The first-name-first form of the name, consisting of rest_of_name, blank, surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 121
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "name_lnf": {
      "description": "The last-name-first form of the name, consisting of surname, comma, blank, rest_of_name",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 122
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Graser, Floyd Robert",
        "api_type": "read-only"
      }
    },
    "native": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "net_id": {
      "description": "The user name to used for authentication to BYU web applications",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9]{4,7}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "official": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "credentials",
          "government_records",
          "personal_records",
          "id_cards"
        ]
      }
    },
    "operation": {
      "description": "The name of the operation in the Guest Access system",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "MY-FINANCIAL-CENTER",
        "api_type": "read-only"
      }
    },
    "operation_performed": {
      "type": "object",
      "properties": {
        "operation_performed_id": {
          "$ref": "#/definitions/operation_performed_id"
        },
        "operation": {
          "$ref": "#/definitions/operation"
        },
        "web_resource_id": {
          "$ref": "#/definitions/web_resource_id"
        },
        "session_id": {
          "$ref": "#/definitions/session_id"
        },
        "date_time_started": {
          "$ref": "#/definitions/date_time_started"
        }
      }
    },
    "operation_performed_id": {
      "description": "the id associated with the operation",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 38
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "929",
        "api_type": "read-only",
        "key": true
      }
    },
    "parent_lds_unit_number": {
      "description": "The Parent LDS Unit Number or the Ward/Branch",
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^( |[0-9]{7})$"
        },
        "description": {
          "type": "string",
          "maxLength": 60
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "1991159",
        "description": "OREM 14TH",
        "api_type": "read-only"
      }
    },
    "person": {
      "type": "object",
      "properties": {
        "basic": {
          "$ref": "#/definitions/basic"
        },
        "addresses": {
          "$ref": "#/definitions/addresses"
        },
        "credentials": {
          "$ref": "#/definitions/credentials"
        },
        "email_addresses": {
          "$ref": "#/definitions/email_addresses"
        },
        "employee_summaries": {
          "$ref": "#/definitions/employee_summaries"
        },
        "family_phones": {
          "$ref": "#/definitions/family_phones"
        },
        "government_records": {
          "$ref": "#/definitions/government_records"
        },
        "group_membership_events": {
          "$ref": "#/definitions/group_membership_events"
        },
        "group_memberships": {
          "$ref": "#/definitions/group_memberships"
        },
        "groups_administered": {
          "$ref": "#/definitions/groups_administered"
        },
        "my_delegators": {
          "$ref": "#/definitions/my_delegators"
        },
        "my_guests": {
          "$ref": "#/definitions/my_guests"
        },
        "id_cards": {
          "$ref": "#/definitions/id_cards"
        },
        "languages": {
          "$ref": "#/definitions/languages"
        },
        "personal_records": {
          "$ref": "#/definitions/personal_records"
        },
        "phones": {
          "$ref": "#/definitions/phones"
        },
        "relationships": {
          "$ref": "#/definitions/relationships"
        },
        "student_summaries": {
          "$ref": "#/definitions/student_summaries"
        }
      }
    },
    "person_group_event_id": {
      "description": "A generated uniqueness key for a person_group_event",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "integer"
        },
        "api_type": {
          "type": "string"
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "4756509",
        "key": true
      }
    },
    "person_post": {
      "description": "Person information to create",
      "type": "object",
      "required": [
        "surname",
        "preferred_surname",
        "preferred_first_name",
        "middle_name",
        "suffix",
        "date_of_death",
        "sex",
        "lds_unit_number",
        "citizenship_country_code",
        "birth_country_code",
        "home_town",
        "home_state_code",
        "home_country_code",
        "high_school_code",
        "restricted",
        "ssn",
        "ssn_verification_date",
        "visa_type",
        "i20_expiration_date",
        "date_of_birth",
        "religion_code",
        "marital_status"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "date_time_created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "surname": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "first_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "preferred_surname": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "preferred_first_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "middle_name": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "suffix": {
          "type": "string",
          "description": "Generational suffix for name: Roman Numeral, JR, SR, Jr, or Sr",
          "default": " ",
          "pattern": "^( |Sr|SR|JR|Jr|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))$",
          "maxLength": 10,
          "minLength": 1
        },
        "deceased": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "date_of_death": {
          "type": "string",
          "format": "date"
        },
        "sex": {
          "type": "string",
          "enum": [
            "M",
            "F",
            "?"
          ]
        },
        "lds_confirmation_date": {
          "type": "string",
          "format": "date"
        },
        "lds_unit_number": {
          "type": "string",
          "pattern": "^[0-9]{,7}$",
          "maxLength": 7
        },
        "citizenship_country_code": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$",
          "maxLength": 3
        },
        "birth_country_code": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$",
          "maxLength": 3
        },
        "home_town": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 30
        },
        "home_state_code": {
          "type": "string",
          "default": "??",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4
        },
        "home_country_code": {
          "type": "string",
          "default": "???",
          "pattern": "^[A-Z?]{3}$",
          "maxLength": 3
        },
        "high_school_code": {
          "type": "string",
          "pattern": "^([]*|[0-9]{6})$",
          "maxLength": 6
        },
        "restricted": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "ssn": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "ssn_verification_date": {
          "type": "string",
          "format": "date"
        },
        "visa_type": {
          "type": "string",
          "pattern": "^( |[A-Z0-9?]{1,3})$",
          "maxLength": 3
        },
        "visa_type_source": {
          "type": "string",
          "default": " ",
          "enum": [
            "ADM",
            "FSA",
            "HR",
            "INTL",
            " "
          ]
        },
        "i20_expiration_date": {
          "type": "string",
          "format": "date"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        },
        "religion_code": {
          "type": "string",
          "pattern": "^[A-Z?]{3}$"
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "D",
            "M",
            "S",
            "W",
            "?"
          ]
        }
      }
    },
    "personal_record_put": {
      "description": "Basic person information to be updated",
      "type": "object",
      "required": [
        "date_of_birth",
        "deceased",
        "date_of_death",
        "sex",
        "lds_unit_number",
        "religion_code",
        "marital_status"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        },
        "religion_code": {
          "type": "string",
          "pattern": "^[A-Z]{,3}$"
        },
        "marital_status": {
          "type": "string",
          "maxLength": 1,
          "enum": [
            "D",
            "M",
            "S",
            "W",
            "?"
          ]
        },
        "date_of_death": {
          "type": "string",
          "format": "date"
        },
        "deceased": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "sex": {
          "type": "string",
          "enum": [
            "M",
            "F",
            "?"
          ]
        },
        "lds_unit_number": {
          "type": "string",
          "pattern": "^[0-9]{,7}$"
        },
        "lds_confirmation_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "personal_records": {
      "description": "Basic person information",
      "type": "object",
      "required": [
        "byu_id"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a person",
          "type": "object",
          "properties": {
            "persons.info": {
              "$ref": "#/definitions/links"
            },
            "persons.modify": {
              "$ref": "#/definitions/links"
            },
            "persons.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "net_id": {
          "$ref": "#/definitions/net_id"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "date_of_birth": {
          "$ref": "#/definitions/date_of_birth"
        },
        "date_of_death": {
          "$ref": "#/definitions/date_of_death"
        },
        "deceased": {
          "$ref": "#/definitions/deceased"
        },
        "sex": {
          "$ref": "#/definitions/sex"
        },
        "lds_unit_number": {
          "$ref": "#/definitions/lds_unit_number"
        },
        "parent_lds_unit_number": {
          "$ref": "#/definitions/parent_lds_unit_number"
        },
        "lds_confirmation_date": {
          "$ref": "#/definitions/lds_confirmation_date"
        },
        "religion_code": {
          "$ref": "#/definitions/religion_code"
        },
        "marital_status": {
          "$ref": "#/definitions/marital_status"
        }
      }
    },
    "persons": {
      "description": "A collection of persons",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of persons",
          "type": "object",
          "properties": {
            "persons.info": {
              "$ref": "#/definitions/links"
            },
            "persons.first": {
              "$ref": "#/definitions/links"
            },
            "persons.last": {
              "$ref": "#/definitions/links"
            },
            "persons.next": {
              "$ref": "#/definitions/links"
            },
            "persons.prev": {
              "$ref": "#/definitions/links"
            },
            "persons.create": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/top_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/person"
          }
        }
      }
    },
    "phone": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single family phone",
          "type": "object",
          "properties": {
            "phones.info": {
              "$ref": "#/definitions/links"
            },
            "phones.modify": {
              "$ref": "#/definitions/links"
            },
            "phones.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "phone_number": {
          "$ref": "#/definitions/phone_number"
        },
        "country_code": {
          "$ref": "#/definitions/country_code"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "cell_flag": {
          "$ref": "#/definitions/cell_flag"
        },
        "time_code": {
          "$ref": "#/definitions/time_code"
        },
        "texts_okay": {
          "$ref": "#/definitions/texts_okay"
        },
        "unlisted": {
          "$ref": "#/definitions/unlisted"
        },
        "primary_flag": {
          "$ref": "#/definitions/primary_flag"
        },
        "tty": {
          "$ref": "#/definitions/tty"
        }
      }
    },
    "phone_number": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "801-420-1684",
        "api_type": "read-only",
        "key": true
      }
    },
    "phone_put": {
      "type": "object",
      "required": [
        "country_code",
        "cell_flag",
        "time_code",
        "texts_okay",
        "unlisted",
        "primary_flag",
        "tty"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "country_code": {
          "type": "string",
          "pattern": "^[A-Z?]{3}$"
        },
        "cell_flag": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "time_code": {
          "type": "string",
          "maxLength": 10
        },
        "texts_okay": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "unlisted": {
          "type": "string",
          "default": "N",
          "enum": [
            "Y",
            "N"
          ]
        },
        "primary_flag": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "tty": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        }
      }
    },
    "phone_type": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "enum": [
            "EMR",
            "PRM"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "key": {
          "type": "boolean"
        }
      },
      "example": {
        "value": "PRM",
        "api-type": "modifiable"
      }
    },
    "phones": {
      "description": "A collection of phones",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links for a collection of family phones",
          "type": "object",
          "properties": {
            "phones.info": {
              "$ref": "#/definitions/links"
            },
            "phones.next": {
              "$ref": "#/definitions/links"
            },
            "phones.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/family_phone"
          }
        }
      }
    },
    "physical_form": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 20
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "ID_CARD",
        "api_type": "read-only"
      }
    },
    "postal_code": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 20,
          "x-template": ":postal_code"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "84604",
        "api_type": "read-only"
      }
    },
    "preferred_first_name": {
      "description": "The preferred first name of the person",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Bob",
        "api_type": "read-only"
      }
    },
    "preferred_name": {
      "description": "The person's preferred name, consisting of the preferred_first_name and preferred_surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 100
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Bob Graser",
        "api_type": "read-only"
      }
    },
    "preferred_language_code": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "EN",
          "maxLength": 2,
          "minLength": 2
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api_type": "read-only"
      }
    },
    "preferred_surname": {
      "description": "The preferred last name of the user",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "primary_flag": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api_type": "read-only"
      }
    },
    "primary_role": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Affiliate",
            "Employee",
            "Faculty",
            "Student",
            "Do Not Issue"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Student",
        "api_type": "read-only"
      }
    },
    "printed_name": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Bob Graser",
        "api_type": "read-only"
      }
    },
    "read_proficiency": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "H",
        "api_type": "read-only"
      }
    },
    "related_id": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "794530501",
        "api_type": "read-only"
      }
    },
    "related_name_fnf": {
      "description": "The related person's full name, given first-name-first",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 132
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert Graser",
        "api_type": "read-only"
      }
    },
    "related_name_lnf": {
      "description": "The related person's full name, given last-name-first",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Graser, Floyd Robert",
        "api_type": "read-only"
      }
    },
    "related_net_id": {
      "description": "The related person's Net ID",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 15
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "related_preferred_first_name": {
      "description": "The related person's preferred first name",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Robert",
        "api_type": "read-only"
      }
    },
    "related_preferred_name": {
      "description": "The related person's preferred, derived from the preferred_first_name and preferred_surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Robert Graser",
        "api_type": "read-only"
      }
    },
    "related_preferred_surname": {
      "description": "The related person's preferred surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "related_rest_of_name": {
      "description": "The related person's full name, excluding the surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert",
        "api_type": "read-only"
      }
    },
    "related_surname": {
      "description": "The related person's surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 25
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "relationship": {
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for a single relationship",
          "type": "object",
          "properties": {
            "relationships.info": {
              "$ref": "#/definitions/links"
            },
            "relationships.modify": {
              "$ref": "#/definitions/links"
            },
            "relationships.delete": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "related_id": {
          "$ref": "#/definitions/related_id"
        },
        "related_net_id": {
          "$ref": "#/definitions/related_net_id"
        },
        "relationship_type": {
          "$ref": "#/definitions/relationship_type"
        },
        "related_name_lnf": {
          "$ref": "#/definitions/related_name_lnf"
        },
        "related_name_fnf": {
          "$ref": "#/definitions/related_name_fnf"
        },
        "related_preferred_name": {
          "$ref": "#/definitions/related_preferred_name"
        },
        "related_surname": {
          "$ref": "#/definitions/related_surname"
        },
        "related_rest_of_name": {
          "$ref": "#/definitions/related_rest_of_name"
        },
        "related_preferred_surname": {
          "$ref": "#/definitions/related_preferred_surname"
        },
        "related_preferred_first_name": {
          "$ref": "#/definitions/related_preferred_first_name"
        },
        "date_time_updated": {
          "$ref": "#/definitions/date_time_updated"
        },
        "updated_by_id": {
          "$ref": "#/definitions/updated_by_id"
        },
        "date_time_created": {
          "$ref": "#/definitions/date_time_created"
        },
        "created_by_id": {
          "$ref": "#/definitions/created_by_id"
        },
        "date_time_verified": {
          "$ref": "#/definitions/date_time_verified"
        },
        "verified_by_id": {
          "$ref": "#/definitions/verified_by_id"
        }
      }
    },
    "relationship_put": {
      "type": "object",
      "required": [
        "date_time_verified",
        "verified_by_id"
      ],
      "properties": {
        "date_time_updated": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by_id": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "relationship_type": {
          "type": "string",
          "enum": [
            "CHILD",
            "GRANDCHILD",
            "RESPONSIBLE_IDENTITY",
            "PARENT",
            "SPOUSE",
            "GRANDPARENT",
            "CONTACT_IDENTITY",
            "FORMER SPOUSE"
          ]
        },
        "date_time_verified": {
          "type": "string",
          "format": "date-time"
        },
        "verified_by_id": {
          "type": "string",
          "default": "",
          "pattern": "^([]{0}|[0-9]{9})$"
        }
      }
    },
    "relationship_type": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "CHILD",
            "GRANDCHILD",
            "RESPONSIBLE_IDENTITY",
            "PARENT",
            "SPOUSE",
            "GRANDPARENT",
            "CONTACT_IDENTITY",
            "FORMER SPOUSE"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "PARENT",
        "api_type": "modifiable"
      }
    },
    "relationships": {
      "description": "Collection of relationships between persons",
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "links": {
          "description": "Hypermedia links that impact the collection",
          "type": "object",
          "properties": {
            "relationships.info": {
              "$ref": "#/definitions/links"
            },
            "relationships.next": {
              "$ref": "#/definitions/links"
            },
            "relationships.prev": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/sub_level_metadata"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/relationship"
          }
        }
      }
    },
    "religion_code": {
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "BPT",
        "description": "Baptist",
        "api_type": "read-only"
      }
    },
    "reports_to_id": {
      "description": "The BYU ID of the supervisor that the person reports to",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "description"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "related"
          ]
        },
        "description": {
          "type": "string",
          "maxLength": 50
        }
      },
      "example": {
        "value": "456789123",
        "description": "Douglas Walker",
        "api-type": "related",
        "related_resource": "https://api.byu.edu/byuapi/employees"
      }
    },
    "rest_of_name": {
      "description": "The person's complete name, excluding the surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 80
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Floyd Robert",
        "api_type": "read-only"
      }
    },
    "restricted": {
      "description": "Indicates the restricted status, as defined by FERPA",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "revoked_by_id": {
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "description": {
          "type": "string",
          "maxLength": 50
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "123456798",
        "api_type": "system",
        "description": "Access delegation expiration process"
      }
    },
    "room": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 5,
          "x-template": ":room"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "C-144",
        "api_type": "read-only"
      }
    },
    "secondary_role": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 30
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "FULL TIME STUDENT JUNIOR",
        "api_type": "read-only"
      }
    },
    "session_id": {
      "description": "The session ID of the delegator operation performed in the Guest Access system",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 100
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable",
            "system"
          ]
        }
      },
      "example": {
        "value": "ST-222881-CpdahQWXi9lAdfEMgQTd-cas",
        "api_type": "system"
      }
    },
    "sex": {
      "description": "The person's sex",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "?",
          "enum": [
            "M",
            "F",
            "?"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "?",
        "api_type": "modifiable"
      }
    },
    "site_id": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 12
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "133",
        "api_type": "modifiable"
      }
    },
    "simple_metadata": {
      "type": "object",
      "required": ["validation_response"],
      "properties": {
        "validation_response": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "default": 200
            },
            "message": {
              "type": "string",
              "default": "Success"
            }
          }
        },
        "validation_information": {
          "type": "array",
          "items": { "type": "string", "default": "Success" }
        },
        "cache": {
          "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
          "type": "object",
          "properties": {
            "date_time": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "speak_proficiency": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "H",
        "api_type": "read-only"
      }
    },
    "ssn": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "",
          "pattern": "^([]{0}|[0-9]{9})$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "modifiable",
            "read-only"
          ]
        }
      },
      "example": {
        "value": "483458222",
        "api_type": "read-only"
      }
    },
    "ssn_verification_date": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system",
            "related",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "2014-05-11T13:45:53.20Z",
        "api_type": "system"
      }
    },
    "state_code": {
      "type": "object",
      "required": [
        "value",
        "description",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "??",
          "pattern": "^([?]{2}|[A-Z]{2,5})$",
          "maxLength": 4,
          "x-template": ":state_code"
        },
        "description": {
          "type": "string",
          "maxLength": 30,
          "x-template": ":state_name"
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "UT",
        "description": "Utah",
        "api_type": "read-only"
      }
    },
    "status": {
      "description": "The credential status, validated through the meta/credential_status service",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 20
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "ACTIVE",
        "api_type": "read-only"
      }
    },
    "student_status": {
      "description": "The status of the student, provided by the Student Status Web Service",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "derived"
          ]
        }
      },
      "example": {
        "value": "Senior",
        "api-type": "derived"
      }
    },
    "student_summaries": {
      "description": "Basic (individual) academic information for a collection of students",
      "type": "object",
      "properties": {
        "links": {
          "description": "Hypermedia links for employee summaries",
          "type": "object",
          "properties": {
            "student_summaries.info": {
              "$ref": "#/definitions/links"
            }
          }
        },
        "metadata": {
          "$ref": "#/definitions/simple_metadata"
        },
        "byu_id": {
          "$ref": "#/definitions/byu_id"
        },
        "student_status": {
          "$ref": "#/definitions/student_status"
        },
        "current_student": {
          "$ref": "#/definitions/current_student"
        },
        "eligible_to_register": {
          "$ref": "#/definitions/eligible_to_register"
        }
      }
    },
    "sub_level_metadata": {
      "type": "object",
      "properties": {
        "collection_size": {
          "type": "integer",
          "minimum": 0,
          "x-template": ":collection_size"
        },
        "page_start": {
          "type": "integer",
          "minimum": 0,
          "default": 0,
          "x-template": ":page_start"
        },
        "page_end": {
          "type": "integer",
          "minimum": 0,
          "x-template": ":page_end"
        },
        "page_size": {
          "type": "integer",
          "minimum": 0,
          "x-template": ":page_size"
        },
        "default_page_size": {
          "type": "integer",
          "minimum": 1,
          "default": 1,
          "x-template": ":default_page_size"
        },
        "maximum_page_size": {
          "type": "integer",
          "x-template": ":maximum_page_size"
        },
        "validation_response": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "maxLength": 3,
              "minLength": 3
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "suffix": {
      "description": "The suffix, validated through the meta/suffix service",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "Generational suffix for name: Roman Numeral, JR, SR, Jr, or Sr",
          "default": " ",
          "pattern": "^( |Sr|SR|JR|Jr|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))$",
          "maxLength": 10,
          "minLength": 1
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "III",
        "api_type": "read-only"
      }
    },
    "surname": {
      "description": "The person's family name/surname",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^(?=.*?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 40
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Graser",
        "api_type": "read-only"
      }
    },
    "texts_okay": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api_type": "read-only"
      }
    },
    "time_code": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 10
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Daytime",
        "api_type": "read-only"
      }
    },
    "top_level_metadata": {
      "type": "object",
      "required": [
        "collection_size",
        "page_start",
        "page_end",
        "page_size",
        "default_page_size",
        "max_page_size"
      ],
      "properties": {
        "collection_size": {
          "type": "integer",
          "minimum": 0
        },
        "page_start": {
          "type": "integer",
          "minimum": 0
        },
        "page_end": {
          "type": "integer",
          "minimum": 0
        },
        "page_size": {
          "type": "integer",
          "minimum": 0
        },
        "default_page_size": {
          "type": "integer",
          "minimum": 1
        },
        "max_page_size": {
          "type": "integer",
          "minimum": 0
        },
        "field_sets_returned": {
          "$ref": "#/definitions/field_sets_returned"
        },
        "field_sets_available": {
          "$ref": "#/definitions/field_sets_available"
        },
        "default_field_sets": {
          "$ref": "#/definitions/default_field_sets"
        },
        "contexts_available": {
          "$ref": "#/definitions/contexts_available"
        },
        "validation_response": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "maxLength": 3,
              "minLength": 3
            },
            "message": {
              "type": "string"
            }
          }
        },
        "default_db": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ces"
            ]
          }
        }
      }
    },
    "translator": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "tty": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "Y",
        "api_type": "read-only"
      }
    },
    "unlisted": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "x-template": ":unlisted",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "updated_by_id": {
      "description": "The BYU ID of the last person who performed the last update",
      "type": "object",
      "required": [
        "value",
        "api_type",
        "description"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$",
          "x-template": ":updated_by_id"
        },
        "api_type": {
          "type": "string",
          "default": "system",
          "enum": [
            "system"
          ]
        },
        "description": {
          "type": "string",
          "pattern": "^(?=.{2,}?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50,
          "x-template": ":updated_by_name"
        }
      },
      "example": {
        "value": "123456798",
        "api_type": "system",
        "description": "INIT"
      }
    },
    "use_preferred_name_on_id_card": {
      "description": "Indicates whether the person has chosen to have his/her preferred name displayed on the ID card",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "user_name": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 100
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "js279",
        "api_type": "read-only"
      }
    },
    "verified_by_id": {
      "type": "object",
      "required": [
        "value",
        "api_type",
        "description"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^[0-9]{9}$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "system"
          ]
        },
        "description": {
          "type": "string",
          "pattern": "^(?=.{2,}?[A-Z])([A-Za-z-]+ )*?[A-Za-z-]+$",
          "maxLength": 50
        }
      },
      "example": {
        "value": "123456798",
        "api_type": "system",
        "description": "INIT"
      }
    },
    "verified_flag": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": "N",
          "x-template": ":verified_flag",
          "enum": [
            "Y",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "default": "read-only",
          "x-template": ":address_api_type",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "N",
        "api_type": "read-only"
      }
    },
    "visa_type": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": " ",
          "pattern": "^( |[A-Z0-9?]{1,3})$"
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        },
        "domain": {
          "type": "string"
        }
      },
      "example": {
        "value": "F1",
        "api_type": "modifiable"
      }
    },
    "visa_type_source": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "default": " ",
          "enum": [
            "ADM",
            "FSA",
            "HR",
            "INTL",
            " "
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "F1",
        "api_type": "modifiable"
      }
    },
    "web_resource_id": {
      "description": "Indicates the web resource ID of the Guest Access operation",
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "00001029",
        "api_type": "read-only"
      }
    },
    "write_proficiency": {
      "type": "object",
      "required": [
        "value",
        "api_type"
      ],
      "properties": {
        "value": {
          "type": "string",
          "enum": [
            "H",
            "M",
            "L",
            "N"
          ]
        },
        "api_type": {
          "type": "string",
          "enum": [
            "read-only",
            "modifiable"
          ]
        }
      },
      "example": {
        "value": "H",
        "api_type": "read-only"
      }
    }
  }
}
